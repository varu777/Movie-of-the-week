{"version":3,"sources":["components/SuggestionForm.js","components/PreviousMovie.js","components/Auth.js","components/CustomNavbar.js","Home.js","pages/Login.js","pages/Suggestions.js","components/PrivateRoute.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["SuggestionForm","state","movieSuggestion","movieNote","loggedIn","submitSuggestion","length","movie","axios","method","url","data","withCredentials","then","response","success","setState","window","alert","val","movieIdx","catch","error","console","log","updateMovie","event","target","value","updateUser","user","updateNote","showReviewForm","this","context","onChange","localStorage","getItem","name","defaultValue","disabled","hidden","process","onClick","React","Component","PreviousMovie","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","LoginContext","createContext","UpdateAuthContext","AuthProvider","children","loginStatus","useContext","useState","setLoginStatus","loading","setLoadingStatus","updateAuth","isLoggedIn","useEffect","Provider","CustomNavbar","logout","setItem","location","reload","Navbar","bg","expand","Brand","style","color","href","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","marginRight","to","Button","variant","contextType","withRouter","Home","isMovieSelected","movieOTW","userOTW","date","noteOTW","description","posterLink","previousMovies","currentPool","upcomingMovies","isLoading","updateWatchedSort","sortBy","movies","movieOTWData","watchOTW","watchedMovies","note","genre","rating","runtime","imgLoaded","display","textDecoration","height","width","onLoad","src","marginBottom","textAlign","map","i","suggestion","Login","password","loginUser","e","preventDefault","username","history","push","message","updatePass","onSubmit","placeholder","type","Suggestions","PrivateRoute","ReactComponent","render","rest","Profile","email","currentPassword","newPassword","confirmNewPassword","updateEmail","updateUsername","updateCurrentPassword","updateNewPassword","updateConfirmNewPassword","submitEmailUpdate","includes","submitUsernameUpdate","submitPasswordUpdate","currPassword","require","config","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e1aa943.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../css/SuggestionForm.css';\n\nclass SuggestionForm extends React.Component {\n    state = {\n        movieSuggestion: '', \n        movieNote: '',\n        loggedIn: false\n    };\n\n    componentDidMount() {\n        this.setState({loggedIn: this.context});\n    }\n\n    submitSuggestion = () => {\n        if (this.state.movieSuggestion.length === 0) {\n            window.alert(\"Movie name cannot be empty.\");\n            return;\n        }\n\n        const movie = this.state.movieSuggestion;\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/SuggestMovie\",\n            data: {\n                movie: movie, \n                movieNote: this.state.movieNote\n            },\n            withCredentials: true\n        })\n        .then((response) => {\n        if (response.data.success) {\n            this.setState({movieSuggestion:'', movieNote:''});\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.movieIdx);\n        } else {\n            // error occured\n            window.alert(response.data.val);\n        }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    updateMovie = (event) => {\n        this.setState({movieSuggestion: event.target.value})\n    } \n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updateNote = (event) => {\n        this.setState({movieNote: event.target.value});\n    }\n\n    showReviewForm = () => {\n        window.alert(\"clicked\");\n    }\n\n    render() {\n        return(\n            <div>\n                <h1> Suggest a Movie </h1>\n\n                <label> Title: </label>\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\n                <br/>\n\n                {localStorage.getItem('loggedIn') == 'true' ? <></> : \n                <>\n                <label> Suggested By: </label>\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\n                </select>\n                <br/>\n                </>\n                 }   \n\n                <label> Teaser Note (optional): </label>\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\n                <br/>\n\n                <button onClick={this.submitSuggestion}> Suggest </button>\n            </div>\n        );\n    }\n}\n\n\nexport default SuggestionForm;","import React from 'react';\nimport '../css/PreviousMovie.css';\n\nclass PreviousMovie extends React.Component {\n    state = {\n        displayReviewForm: false,\n        reviewSubmitted: false,\n        reviewScoreInput: -1.0,\n        finalReviewScore: -1.0,\n        user: ''\n    }\n\n    displayReviewForm = () => {\n        this.setState({displayReviewForm: true});\n    }\n\n    cancelReview = () => {\n        this.setState({displayReviewForm: false})\n    }\n\n    updateReviewScore = (event) => {\n        this.setState({reviewScore: event.target.value});\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n    \n    submitReview = () => {\n        try {\n            var val = parseFloat(this.state.reviewScore);\n            window.alert(val);\n        } catch {\n            window.alert(\"Error\");\n            return;\n        }\n\n        this.setState({reviewSubmitted: true})\n        //this.setState({})\n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <p> Movie title: {this.props.movieTitle} </p>\n                <p> Suggested by: {this.props.addedBy} </p>\n                <p> Watched on: {this.props.dateWatched} </p>\n                <p> Teaser Note: {this.props.teaser} </p>\n                {/*\n                <p> Average Review: {this.props.avgReview} </p>\n                <p> Review Count: {this.props.reviewCount} </p>\n                <button onClick={this.displayReviewForm}> Make Review </button>\n                {this.state.displayReviewForm ? \n                   <div> \n                        <label> Score (1.00-10.00): </label>\n                        <input onChange={this.updateReviewScore} />\n\n                        <label> Reviewed By: </label>\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\n                        <option value=\"\">Felix</option>\n                        <option value=\"\">Hector</option>\n                        <option value=\"\">Jason</option>\n                        <option value=\"\">Jesse</option>\n                        <option value=\"\">Jorge</option>\n                        <option value=\"\">Juan</option>\n                        <option value=\"\">Octavio</option>\n                        </select>\n\n                        <button onClick={this.submitReview}> Submit </button> \n                        <button onClick={this.cancelReview}> Cancel </button>\n\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\n                   </div>\n                   : \n                   null \n                }\n                */\n                }\n            </div>\n        );\n    }\n}\n\nexport default PreviousMovie;","import  React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\n\nconst LoginContext = React.createContext(false);\nconst UpdateAuthContext = React.createContext(true);\n\nconst AuthProvider = ({children}) => {\n    const loginStatus = useContext(LoginContext);\n    const [loggedIn, setLoginStatus]  = useState(loginStatus);\n    const [loading, setLoadingStatus] = useState(true);\n\n    let updateAuth = function () {\n        return axios({\n            method: 'get', \n            url: \"https://movieotw.herokuapp.com/loginCheck\",\n            withCredentials: true\n          })\n        .then((response) => {\n            console.log(response);\n            console.log(\"hi\");\n            console.log(response.data);\n            if (response.data.isLoggedIn) {\n                setLoginStatus(true);\n            } else {\n                setLoginStatus(false);\n            }\n            setLoadingStatus(false);\n        })\n        .catch((error) => {\n            window.alert(\"Unable to load home data: \" + error);\n            setLoginStatus(false);\n            setLoadingStatus(false);\n        })\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, [])\n\n    if (loading) {\n        return <CustomNavbar loading={true}/>\n    }\n\n    return (\n        <UpdateAuthContext.Provider value={updateAuth}>\n            <LoginContext.Provider value={loggedIn}>\n                {children}\n            </LoginContext.Provider>\n        </UpdateAuthContext.Provider>\n    );\n}\n\nexport {UpdateAuthContext, AuthProvider, LoginContext}","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Navbar, NavDropdown, Nav, Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { LoginContext } from '../components/Auth';\n\nclass CustomNavbar extends React.Component {\n    state = {\n        loggedIn: this.context\n    }\n\n    logout = () => {\n        axios({\n            method: 'get',\n            url: 'https://movieotw.herokuapp.com/logout',\n            withCredentials: true,\n            loggedIn: this.context \n        }).then((response) => {\n            if (!response.data.success) {\n                window.alert(\"Unable to logout, please try again.\");\n                return;\n            }\n\n            this.setState({loggedIn: false});\n            localStorage.setItem('loggedIn', false);\n            window.location.reload();\n        }).catch((error) => {\n            window.alert(\"Unable to logout: \" + error);\n        });\n    }\n\n    componentDidMount() {\n        this.setState({loggedIn: this.context})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\">\n                <Navbar.Brand style={{color: 'salmon'}}href=\"/\">Movie Of The Week</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link style={{color: 'white'}} href=\"#home\">Leaderboard</Nav.Link>\n                    <Nav.Link style={{color: 'white'}} href=\"#suggestions\">Suggestions</Nav.Link>\n\n                    </Nav>\n                    <Form inline>\n                    \n                    {this.props.loading == null && !this.state.loggedIn ? \n                        <LinkContainer to=\"/login\">\n                            <Button color=\"green\" variant=\"secondary\">\n                               Login \n                            </Button>\n                        </LinkContainer>\n                        :\n                        <>\n                        <LinkContainer style={{marginRight: '5px'}} to=\"/profile\">\n                            <Button color=\"blue\" variant=\"secondary\">\n                              Profile \n                            </Button>\n                        </LinkContainer>\n                        <Button onClick={this.logout} color=\"blue\" variant=\"secondary\">\n                            Logout    \n                        </Button>\n                        </>\n                    }\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\nCustomNavbar.contextType = LoginContext\n\nexport default withRouter(CustomNavbar);","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SuggestionForm from './components/SuggestionForm';\nimport PreviousMovie from './components/PreviousMovie';\nimport CustomNavbar from './components/CustomNavbar';\n\n\nclass Home extends React.Component {\n  state = {\n    isMovieSelected: false,\n    movieOTW: '',\n    userOTW: '', \n    date: '',\n    noteOTW: '',\n    description: '',\n    posterLink: '',\n    previousMovies: [],\n    currentPool: [],\n    upcomingMovies: [],\n    isLoading: true,\n    loggedIn: false\n  }\n  \n  componentDidMount () {\n    // retrieve watched movies\n    axios({\n      method: 'get', \n      url: \"https://movieotw.herokuapp.com/HomeData\",\n      withCredentials: true\n    })\n\n    .then((response) => {\n      // get motw data\n      let movieOTWData = response.data.movieOTW;\n\n      // display motw if it's not blank\n      let isMovieSelected = (movieOTWData.watchOTW.length === 0) ? false : true;\n      \n      let movies = response.data.watchedMovies;\n      this.setState({\n        previousMovies: movies, \n        isMovieSelected: isMovieSelected,\n        movieOTW: movieOTWData.watchOTW,\n        userOTW: movieOTWData.addedBy, \n        noteOTW: movieOTWData.note, \n        genre: movieOTWData.genre,\n        rating: movieOTWData.rating,\n        posterLink: movieOTWData.posterLink,\n        runtime: movieOTWData.runtime,\n        description: movieOTWData.description,\n        upcomingMovies: response.data.upcomingMovies, \n        currentPool: response.data.currentPool,\n        isLoading: false,\n        imgLoaded: false \n      });\n    })\n    .catch((error) => {\n      window.alert(\"Unable to load home data: \" + error);\n    })\n\n    this.setState({loggedIn: this.context});\n  }\n  \n  updateWatchedSort = (event) => {\n    // gets newly selected filter type\n    let sortBy = event.target.value;\n\n    // sort watched movies array by new filter\n    axios({\n      method: 'post',\n      url: \"https://movieotw.herokuapp.com/SortWatched\",\n      data: {\n          sortBy: sortBy\n      },\n      withCredentials: true\n    }).then((response) => {\n      this.setState({previousMovies: response.data.movies});\n    }).catch((error) => {\n      window.alert(\"Unable to apply filter: \" + error);\n    });\n  }\n\n\n  render() {\n    if (this.state.isLoading && !this.state.imgLoaded) {\n      return <CustomNavbar loading={true} />\n    }\n    return (\n      <>\n      <CustomNavbar />\n      <div style={{display: this.state.imgLoaded == true ? 'block' : 'none'}} className=\"App\">\n        <h1 className=\"title\">Selected Movie </h1>\n\n        {this.state.isMovieSelected ? \n            <div className=\"motw-container borders\"> \n              <h1 className=\"title\"> {this.state.movieOTW} </h1>\n              <h4> {this.state.date} </h4>\n              <p> Location: <a style={{textDecoration: 'underline'}}href=\"https://zoom.us/j/97457711739?pwd=Z2x3K3l5OUVTQVJmNDBkRGNqWHdjZz09\">Zoom Theatre</a></p> \n              <p className=\"addedBy\"> Added by {this.state.userOTW} </p>\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\n              <img style={{height: '45%', width: '45%'}} onLoad={() => {this.setState({imgLoaded:true})}}src={this.state.posterLink}></img> \n              <div className=\"description-container\">\n                <p style={{marginBottom: '-.5px'}}> Description: </p>\n                <p> {this.state.description} </p>\n\n                <p> Genre: {this.state.genre} | Runtime: {this.state.runtime} | Rated {this.state.rating}</p>\n\n              </div>\n            </div> \n            : \n            <p style={{textAlign: 'center'}}> No movie selected yet for this week.</p>\n        }\n\n        <div className=\"center\">\n        <h1> Statistics </h1>\n        <p>Total Movies Suggested: {this.state.upcomingMovies.length + this.state.previousMovies.length} </p>\n        <p>Movies Watched: {this.state.previousMovies.length} </p>\n        <p>Upcoming Movies: {this.state.upcomingMovies.length} </p>\n        <p>Current Pool Size: {this.state.currentPool.length} </p>\n        <p>Members: 7 </p>\n\n        <SuggestionForm />\n\n        <h1 > Current Pool </h1>\n        {this.state.currentPool.map((user, i) => (\n          <p key={i}> {user.suggestion} - {user.name} </p>\n        ))}\n\n        <h1> Upcoming Movies </h1>\n        {this.state.upcomingMovies.map((movie, i) => (\n          <div>\n          <p key={i}> {movie.name} - {movie.addedBy} </p> \n          </div>\n        ))}\n\n        <h1> Movies Watched so Far </h1>\n        <label style={{marginRight: '.5vw'}}> Sort by </label>\n        <select name=\"Name\" defaultValue=\"Date-Descending\" onChange={this.updateWatchedSort}>\n        <option value={\"recent\"}>Recent First</option>\n        <option value={\"oldest\"}>Oldest First</option>\n        <option value={\"name\"}>Movie Name</option>\n        <option disabled={true} value={\"o-rating\"}>Overall Ratings</option>\n        <option disabled={true} value={\"u-rating\"}>My Ratings</option>\n        </select>\n        {this.state.previousMovies.map((movie, i) => (\n          <PreviousMovie className=\"watched-container\" key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={movie.dateWatched} />\n        ))}\n        <br />\n      </div>\n      </div>\n      </>\n    );\n  }\n}\n\n\nexport default withRouter(Home);\n","import React, { useContext } from 'react';\nimport { AuthProvider, UpdateAuthContext } from '../components/Auth';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport '../css/Login.css';\nimport { withRouter } from 'react-router';\n\nclass Login extends React.Component {\n    state = {\n        user: '',\n        password: '',\n    }\n\n    loginUser = (e) => {\n        e.preventDefault();\n        // both fields empty check\n        if (this.state.user.length == 0 && this.state.password.length == 0) {\n            window.alert(\"Both fields cannot be empty.\");\n            return;\n        }\n\n        // empty username check\n        if (this.state.user.length == 0) {\n            window.alert(\"Email/Username field cannot be empty.\");\n            return; \n        }\n\n        // empty password check\n        if (this.state.password.length == 0) {\n            window.alert(\"Password field cannot be empty.\");\n            return;\n        }\n\n        // attempt to sign in user\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/login\",\n            data: {\n                username: this.state.user,\n                password: this.state.password\n            },\n            withCredentials: true\n          }).then((response) => {\n              // login failed\n              if (!response.data.success) {\n                window.alert(response.data.message);\n                return;\n              }\n\n              localStorage.setItem('loggedIn', true); \n              let updateAuth = this.context;\n              updateAuth().then(() => {\n                console.log(\"pushing to login\");\n                this.props.history.push('/');\n              });\n\n          }).catch((error) => {\n            window.alert(\"Error signing in: \" + error);\n          });\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updatePass = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n\n\n    render() {\n        return (\n            <>\n                <CustomNavbar />\n                <div className=\"login-container\">\n                    <h1 className=\"title\"> Login </h1>\n                    <form onSubmit={this.loginUser}>\n                        <input placeholder=\"Username or Email\" onChange={this.updateUser} />\n                        <br/>\n\n                        <input type=\"password\" placeholder=\"Password\" onChange={this.updatePass} />\n                        <br/>\n                        <br/>\n                        <button type=\"submit\"> Login </button>            \n                    </form>\n                    <br/>\n\n                </div>\n\n            </>\n        );\n    }\n}\n\nLogin.contextType = UpdateAuthContext;\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport '../css/Suggestions.css';\n\nclass Suggestions extends React.Component {\n   state = {\n    isLoading: true, \n    movies: []\n   }\n\n   componentDidMount() {\n    axios({\n        method: 'get', \n        url: \"https://movieotw.herokuapp.com/loadSuggestions\",\n        withCredentials: true\n      })\n  \n      .then((response) => {\n        // user not signed in\n        if (response.data.isLoggedIn != null && !response.data.isLoggedIn) {\n          this.props.history.push('/login');\n          return;\n        }\n\n        this.setState({movies: response.data.movies, isLoading: false});\n  \n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })     \n   } \n\n   render() {\n     if (this.state.isLoading) {\n       return <CustomNavbar loading={true} />\n     }\n\n    return (\n        <>  \n        <CustomNavbar />\n        <h1 className=\"suggestion-title\"> My Suggestions </h1>\n        {this.state.movies.map((movie, i) => (\n            <div className=\"suggestion-container\">\n                <p key={i}> {movie.name} - {movie.date} </p>\n                <button> Delete </button>\n            </div>\n        ))}\n        </>\n    );\n   }\n}\n\nexport default withRouter(Suggestions);","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { LoginContext } from './Auth';\n\nconst PrivateRoute = ({render: ReactComponent, ...rest}) => {\n    const isLoggedIn = useContext(LoginContext);\n    return (\n        <Route {...rest} render={props => (isLoggedIn ? <ReactComponent {...props} /> : <Redirect to='/login'/>)} />\n    );\n};\n\n\nexport default PrivateRoute;","import React from 'react';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\n\nclass Profile extends React.Component {\n   state = {\n      email: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      username: ''\n   }\n\n   updateEmail = (event) => {\n      this.setState({email: event.target.value});\n   }\n\n   updateUsername = (event) => {\n      this.setState({username: event.target.value});\n   }\n\n   updateCurrentPassword = (event) => {\n      this.setState({currentPassword: event.target.value});\n   }\n\n   updateNewPassword = (event) => {\n      this.setState({newPassword: event.target.value});\n   }\n\n   updateConfirmNewPassword = (event) => {\n      this.setState({confirmNewPassword: event.target.value});\n   }\n\n   submitEmailUpdate = () => {\n      if (this.state.email.length === 0) {\n         window.alert('Email field empty.');\n         return;\n      }\n\n      if (!this.state.email.includes('@')) {\n         window.alert('Domain (@) not specified.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateEmail',\n         data: {\n             email: this.state.email\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Email has successfully updated.');\n            this.setState({email:''});\n          } else {\n            window.alert(\"Email did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update email: \" + error);\n       });\n   }\n\n   submitUsernameUpdate = () => {\n      if (this.state.username.length === 0) {\n         window.alert('Username field empty.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateUsername',\n         data: {\n             username: this.state.username\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Username has successfully updated.');\n            this.setState({username:''});\n          } else {\n            window.alert(\"Username did not update, please try again.\");\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update username: \" + error);\n       })\n\n   }\n\n   submitPasswordUpdate = () => {\n      if (this.state.currentPassword.length === 0) {\n         window.alert(\"Current password field is empty.\");\n         return;\n      }\n\n      if (this.state.newPassword.length === 0) {\n         window.alert(\"New password field is empty.\");\n         return;\n      }\n\n      if (this.state.confirmNewPassword !== this.state.newPassword) {\n         window.alert(\"New passwords did not match. Please try again.\");\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updatePassword',\n         data: {\n             newPassword: this.state.newPassword,\n             currPassword: this.state.currentPassword\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Password has successfully updated.');\n            this.setState({currentPassword:''});\n            this.setState({newPassword:''});\n            this.setState({confirmNewPassword:''});\n          } else {\n            window.alert(\"Password did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update password: \" + error);\n       })\n   }\n\n   render() {\n     return (\n        <>\n        <CustomNavbar />\n        <h1> Update Email </h1>\n        <input value={this.state.email} onChange={this.updateEmail} /> \n        <br/>\n        <button onClick={this.submitEmailUpdate}>Update Email </button>\n        <h1> Update Username </h1>\n        <input value={this.state.username} onChange={this.updateUsername} /> \n        <br/>\n        <button onClick={this.submitUsernameUpdate}>Update Username</button>\n        <h1> Update Password </h1>\n        <label> Current password </label>\n        <input value={this.state.currentPassword} type=\"password\" onChange={this.updateCurrentPassword} /> \n        <br/>\n        <label> New Password </label> \n        <input value={this.state.newPassword} type=\"password\" onChange={this.updateNewPassword} /> \n        <br/>\n        <label> Confirm New Password </label> \n        <input value={this.state.confirmNewPassword} type=\"password\" onChange={this.updateConfirmNewPassword} /> \n        <br/>\n        <button onClick={this.submitPasswordUpdate}>Update Password </button>\n        </>\n     );\n   } \n}\n\nexport default Profile;","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Login from './pages/Login';\nimport Suggestions from './pages/Suggestions';\nimport PrivateRoute from './components/PrivateRoute';\nimport { AuthProvider } from './components/Auth';\nimport Profile from './pages/Profile';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nrequire('dotenv').config()\n\nclass App extends React.Component {\n  componentDidMount () {\n  }\n\n  render() {\n    return(\n      <>\n      <AuthProvider>\n        <Router>\n          <PrivateRoute path=\"/\"     exact render={(props) => <Home />} />\n          <Route path=\"/login\"       exact render={(props) => <Login />} />\n          <PrivateRoute path=\"/suggestions\" exact render={(props) => <Suggestions />} />\n          <PrivateRoute path=\"/profile\"     exact render={(props) => <Profile />} />\n        </Router>\n      </AuthProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}