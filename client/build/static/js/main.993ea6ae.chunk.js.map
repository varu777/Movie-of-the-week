{"version":3,"sources":["components/SuggestionForm.js","components/PreviousMovie.js","components/Auth.js","components/CustomNavbar.js","Home.js","pages/Login.js","pages/UpdateMovie.js","pages/Suggestions.js","components/PrivateRoute.js","pages/Profile.js","App.js","reportWebVitals.js","index.js","utils/dateFormatterUtil.js"],"names":["SuggestionForm","state","movieSuggestion","movieNote","loggedIn","submitSuggestion","length","movie","axios","method","url","data","withCredentials","then","response","success","setState","window","alert","val","movieIdx","catch","error","console","log","updateMovie","event","target","value","updateUser","user","updateNote","showReviewForm","this","context","onChange","localStorage","getItem","name","defaultValue","disabled","hidden","process","onClick","React","Component","PreviousMovie","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","LoginContext","createContext","loggedin","currentUser","UpdateAuthContext","AuthProvider","children","loginStatus","useContext","useState","setLoginStatus","loading","setLoadingStatus","updateAuth","isLoggedIn","useEffect","Provider","CustomNavbar","username","logout","setItem","location","reload","Navbar","bg","expand","Brand","style","color","href","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","marginRight","marginTop","to","Button","variant","withRouter","Home","isMovieSelected","movieOTW","userOTW","date","noteOTW","description","posterLink","previousMovies","currentPool","upcomingMovies","isLoading","updateWatchedSort","sortBy","movies","movieOTWData","watchOTW","watchedMovies","note","genre","rating","runtime","imgLoaded","display","textDecoration","height","width","onLoad","src","marginBottom","textAlign","map","i","formatDate","Login","password","loginUser","e","preventDefault","history","push","message","updatePass","onSubmit","placeholder","type","contextType","UpdateMovie","movieName","updateMovieName","updateAddedBy","updateTeaser","updateDescription","updateRating","updateRuntime","updateGenre","updatePosterLink","submitUpdateMovie","Suggestions","enteredPool","currentChoice","userMovies","otherMovies","deleteSuggestion","confirm","filter","setAsNextChoice","previous","new","enterPool","leavePool","align","PrivateRoute","ReactComponent","render","rest","Profile","email","currentPassword","newPassword","confirmNewPassword","updateEmail","updateUsername","updateCurrentPassword","updateNewPassword","updateConfirmNewPassword","submitEmailUpdate","includes","submitUsernameUpdate","submitPasswordUpdate","currPassword","require","config","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","months","module","exports","Date","getMonth","getDate","getFullYear"],"mappings":"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","file":"static/js/main.993ea6ae.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../css/SuggestionForm.css';\n\nclass SuggestionForm extends React.Component {\n    state = {\n        movieSuggestion: '', \n        movieNote: '',\n        loggedIn: false\n    };\n\n    componentDidMount() {\n        this.setState({loggedIn: this.context});\n    }\n\n    submitSuggestion = () => {\n        if (this.state.movieSuggestion.length === 0) {\n            window.alert(\"Movie name cannot be empty.\");\n            return;\n        }\n\n        const movie = this.state.movieSuggestion;\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/SuggestMovie\",\n            data: {\n                movie: movie, \n                movieNote: this.state.movieNote\n            },\n            withCredentials: true\n        })\n        .then((response) => {\n        if (response.data.success) {\n            this.setState({movieSuggestion:'', movieNote:''});\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.movieIdx);\n        } else {\n            // error occured\n            window.alert(response.data.val);\n        }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    updateMovie = (event) => {\n        this.setState({movieSuggestion: event.target.value})\n    } \n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updateNote = (event) => {\n        this.setState({movieNote: event.target.value});\n    }\n\n    showReviewForm = () => {\n        window.alert(\"clicked\");\n    }\n\n    render() {\n        return(\n            <div>\n                <h1> Suggest a Movie </h1>\n\n                <label> Title: </label>\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\n                <br/>\n\n                {localStorage.getItem('loggedIn') == 'true' ? <></> : \n                <>\n                <label> Suggested By: </label>\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\n                </select>\n                <br/>\n                </>\n                 }   \n\n                <label> Teaser Note (optional): </label>\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\n                <br/>\n\n                <button onClick={this.submitSuggestion}> Suggest </button>\n            </div>\n        );\n    }\n}\n\n\nexport default SuggestionForm;","import React from 'react';\nimport '../css/PreviousMovie.css';\n\nclass PreviousMovie extends React.Component {\n    state = {\n        displayReviewForm: false,\n        reviewSubmitted: false,\n        reviewScoreInput: -1.0,\n        finalReviewScore: -1.0,\n        user: ''\n    }\n\n    displayReviewForm = () => {\n        this.setState({displayReviewForm: true});\n    }\n\n    cancelReview = () => {\n        this.setState({displayReviewForm: false})\n    }\n\n    updateReviewScore = (event) => {\n        this.setState({reviewScore: event.target.value});\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n    \n    submitReview = () => {\n        try {\n            var val = parseFloat(this.state.reviewScore);\n            window.alert(val);\n        } catch {\n            window.alert(\"Error\");\n            return;\n        }\n\n        this.setState({reviewSubmitted: true})\n        //this.setState({})\n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <p> Movie title: {this.props.movieTitle} </p>\n                <p> Suggested by: {this.props.addedBy} </p>\n                <p> Watched on: {this.props.dateWatched} </p>\n                <p> Teaser Note: {this.props.teaser} </p>\n                {/*\n                <p> Average Review: {this.props.avgReview} </p>\n                <p> Review Count: {this.props.reviewCount} </p>\n                <button onClick={this.displayReviewForm}> Make Review </button>\n                {this.state.displayReviewForm ? \n                   <div> \n                        <label> Score (1.00-10.00): </label>\n                        <input onChange={this.updateReviewScore} />\n\n                        <label> Reviewed By: </label>\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\n                        <option value=\"\">Felix</option>\n                        <option value=\"\">Hector</option>\n                        <option value=\"\">Jason</option>\n                        <option value=\"\">Jesse</option>\n                        <option value=\"\">Jorge</option>\n                        <option value=\"\">Juan</option>\n                        <option value=\"\">Octavio</option>\n                        </select>\n\n                        <button onClick={this.submitReview}> Submit </button> \n                        <button onClick={this.cancelReview}> Cancel </button>\n\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\n                   </div>\n                   : \n                   null \n                }\n                */\n                }\n            </div>\n        );\n    }\n}\n\nexport default PreviousMovie;","import  React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport { use } from 'passport';\n\n\nconst LoginContext      = React.createContext({loggedin: false, currentUser: {}});\nconst UpdateAuthContext = React.createContext(true);\n\nconst AuthProvider = ({children}) => {\n    const loginStatus = useContext(LoginContext);\n    const [loggedIn, setLoginStatus]  = useState(loginStatus);\n    const [loading, setLoadingStatus] = useState(true);\n\n    let updateAuth = function () {\n        return axios({\n            method: 'get', \n            url: \"https://movieotw.herokuapp.com/loginCheck\",\n            withCredentials: true\n          })\n        .then((response) => {\n            if (response.data.isLoggedIn) {\n                setLoginStatus({loggedIn: true, currentUser: response.data.currentUser});\n            } else {\n                setLoginStatus({loggedIn: false, currentUser: {}});\n            }\n            setLoadingStatus(false);\n        })\n        .catch((error) => {\n            window.alert(\"Unable to load home data: \" + error);\n            setLoginStatus({loggedIn: false, currentUser: {}});\n            setLoadingStatus(false);\n        })\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, [])\n\n    if (loading) {\n        console.log(\"here\");\n        return (\n            // render nothing if auth check hasn't finished yet\n            <> </>\n        );\n    }\n\n    return (\n        <UpdateAuthContext.Provider value={updateAuth}>\n            <LoginContext.Provider value={loggedIn}>\n                {children}\n            </LoginContext.Provider>\n        </UpdateAuthContext.Provider>\n    );\n}\n\nexport {UpdateAuthContext, AuthProvider, LoginContext}","import React, { createContext } from 'react';\nimport { withRouter } from 'react-router';\nimport { Navbar, NavDropdown, Nav, Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { LoginContext } from '../components/Auth';\n\nclass CustomNavbar extends React.Component {\n    state = {\n        loggedIn: this.props.user.loggedIn,\n        currentUser: this.props.user.currentUser === null ? \"\" : this.props.user.currentUser.username\n    }\n\n    logout = () => {\n        console.log(\"her\");\n        axios({\n            method: 'get',\n            url: 'https://movieotw.herokuapp.com/logout',\n            withCredentials: true,\n            loggedIn: this.context.loggedIn\n        }).then((response) => {\n            if (!response.data.success) {\n                window.alert(\"Unable to logout, please try again.\");\n                return;\n            }\n\n            this.setState({loggedIn: false});\n            localStorage.setItem('loggedIn', false);\n            window.location.reload();\n        }).catch((error) => {\n            window.alert(\"Unable to logout: \" + error);\n        });\n    }\n\n    componentDidMount() {\n        this.setState({loggedIn: this.props.user.loggedIn});\n        this.setState({currentUser: this.props.user.currentUser.username})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\">\n                <Navbar.Brand style={{color: 'salmon'}}href=\"/\">Movie Of The Week</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link style={{color: 'white'}} href=\"#home\">Leaderboard</Nav.Link>\n                    <Nav.Link style={{color: 'white'}} href=\"#suggestions\">Suggestions</Nav.Link>\n\n                    </Nav>\n                    <Form inline>\n                    \n                    {!this.state.loggedIn ? \n                        <>\n                        <LinkContainer to=\"/login\">\n                            <Button color=\"green\" variant=\"secondary\">\n                               Login \n                            </Button>\n                        </LinkContainer>\n                        </>\n                        :\n                        <>\n\n                        {this.state.currentUser === \"\" ?  <p></p> : <p style={{marginRight: '10px', marginTop: '12px'}}> Welcome back, {this.state.currentUser}!</p>}\n                        <LinkContainer style={{marginRight: '5px'}} to=\"/profile\">\n                            <Button color=\"blue\" variant=\"secondary\">\n                              Profile \n                            </Button>\n                        </LinkContainer>\n                        <Button onClick={this.logout} color=\"blue\" variant=\"secondary\">\n                            Logout    \n                        </Button>\n                        </>\n                    }\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default withRouter(CustomNavbar);","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SuggestionForm from './components/SuggestionForm';\nimport PreviousMovie from './components/PreviousMovie';\nimport CustomNavbar from './components/CustomNavbar';\nimport formatDate from './utils/dateFormatterUtil';\n\n\nclass Home extends React.Component {\n  state = {\n    isMovieSelected: false,\n    movieOTW: '',\n    userOTW: '', \n    date: '',\n    noteOTW: '',\n    description: '',\n    posterLink: '',\n    previousMovies: [],\n    currentPool: [],\n    upcomingMovies: [],\n    isLoading: true,\n    loggedIn: false\n  }\n  \n  componentDidMount () {\n    // retrieve watched movies\n    axios({\n      method: 'get', \n      url: \"https://movieotw.herokuapp.com/HomeData\",\n      withCredentials: true\n    })\n\n    .then((response) => {\n      // get motw data\n      let movieOTWData = response.data.movieOTW;\n\n      // display motw if it's not blank\n      let isMovieSelected = (movieOTWData.watchOTW.length === 0) ? false : true;\n      \n      let movies = response.data.watchedMovies;\n      this.setState({\n        previousMovies: movies, \n        isMovieSelected: isMovieSelected,\n        movieOTW: movieOTWData.watchOTW,\n        userOTW: movieOTWData.addedBy, \n        noteOTW: movieOTWData.note, \n        genre: movieOTWData.genre,\n        rating: movieOTWData.rating,\n        posterLink: movieOTWData.posterLink,\n        runtime: movieOTWData.runtime,\n        description: movieOTWData.description,\n        upcomingMovies: response.data.upcomingMovies, \n        currentPool: response.data.currentPool,\n        isLoading: false,\n        imgLoaded: false \n      });\n    })\n    .catch((error) => {\n      window.alert(\"Unable to load home data: \" + error);\n    })\n\n    this.setState({loggedIn: this.context});\n  }\n  \n  updateWatchedSort = (event) => {\n    // gets newly selected filter type\n    let sortBy = event.target.value;\n\n    // sort watched movies array by new filter\n    axios({\n      method: 'post',\n      url: \"https://movieotw.herokuapp.com/SortWatched\",\n      data: {\n          sortBy: sortBy\n      },\n      withCredentials: true\n    }).then((response) => {\n      this.setState({previousMovies: response.data.movies});\n    }).catch((error) => {\n      window.alert(\"Unable to apply filter: \" + error);\n    });\n  }\n\n\n  render() {\n\n    return (\n      <>\n      <div style={{display: this.state.imgLoaded == true ? 'block' : 'none'}} className=\"App\">\n        <h1 className=\"title\">Selected Movie </h1>\n\n        {this.state.isMovieSelected ? \n            <div className=\"motw-container borders\"> \n              <h1 className=\"title\"> {this.state.movieOTW} </h1>\n              <h4> {this.state.date} </h4>\n              <p> Location: <a style={{textDecoration: 'underline'}}href=\"https://zoom.us/j/97457711739?pwd=Z2x3K3l5OUVTQVJmNDBkRGNqWHdjZz09\">Zoom Theatre</a></p> \n              <p className=\"addedBy\"> Added by {this.state.userOTW} </p>\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\n              <img style={{height: '45%', width: '45%'}} onLoad={() => {this.setState({imgLoaded:true})}}src={this.state.posterLink}></img> \n              <div className=\"description-container\">\n                <p style={{marginBottom: '-.5px'}}> Description: </p>\n                <p> {this.state.description} </p>\n\n                <p> Genre: {this.state.genre} | Runtime: {this.state.runtime} | Rated {this.state.rating}</p>\n\n              </div>\n            </div> \n            : \n            <p style={{textAlign: 'center'}}> No movie selected yet for this week.</p>\n        }\n\n        <div className=\"center\">\n        <h1> Statistics </h1>\n        <p>Total Movies Suggested: {this.state.upcomingMovies.length + this.state.previousMovies.length} </p>\n        <p>Movies Watched: {this.state.previousMovies.length} </p>\n        <p>Upcoming Movies: {this.state.upcomingMovies.length} </p>\n        <p>Current Pool Size: {this.state.currentPool.length} </p>\n        <p>Members: 7 </p>\n\n        <SuggestionForm />\n\n        {/*\n        <h1 > Current Pool </h1>\n        {this.state.currentPool.map((user, i) => (\n          <p key={i}> {user.suggestion} - {user.name} </p>\n        ))}*/}\n\n        <h1> Upcoming Movies </h1>\n        {this.state.upcomingMovies.map((movie, i) => (\n          <div>\n          <p key={i}> {movie.name} - {movie.addedBy} </p> \n          </div>\n        ))}\n\n        <h1> Movies Watched so Far </h1>\n        <label style={{marginRight: '.5vw'}}> Sort by </label>\n        <select name=\"Name\" defaultValue=\"Date-Descending\" onChange={this.updateWatchedSort}>\n        <option value={\"recent\"}>Recent First</option>\n        <option value={\"oldest\"}>Oldest First</option>\n        <option value={\"name\"}>Movie Name</option>\n        <option disabled={true} value={\"o-rating\"}>Overall Ratings</option>\n        <option disabled={true} value={\"u-rating\"}>My Ratings</option>\n        </select>\n        {this.state.previousMovies.map((movie, i) => (\n          <PreviousMovie className=\"watched-container\" key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={formatDate(movie.date)} />\n        ))}\n        <br />\n      </div>\n      </div>\n      </>\n    );\n  }\n}\n\n\nexport default withRouter(Home);\n","import React, { useContext } from 'react';\nimport { AuthProvider, UpdateAuthContext } from '../components/Auth';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport '../css/Login.css';\nimport { withRouter } from 'react-router';\n\nclass Login extends React.Component {\n    state = {\n        user: '',\n        password: '',\n    }\n\n    loginUser = (e) => {\n        e.preventDefault();\n        // both fields empty check\n        if (this.state.user.length == 0 && this.state.password.length == 0) {\n            window.alert(\"Both fields cannot be empty.\");\n            return;\n        }\n\n        // empty username check\n        if (this.state.user.length == 0) {\n            window.alert(\"Email/Username field cannot be empty.\");\n            return; \n        }\n\n        // empty password check\n        if (this.state.password.length == 0) {\n            window.alert(\"Password field cannot be empty.\");\n            return;\n        }\n\n        // attempt to sign in user\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/login\",\n            data: {\n                username: this.state.user,\n                password: this.state.password\n            },\n            withCredentials: true\n          }).then((response) => {\n              // login failed\n              if (!response.data.success) {\n                window.alert(response.data.message);\n                return;\n              }\n\n              localStorage.setItem('loggedIn', true); \n              let updateAuth = this.context;\n              updateAuth().then(() => {\n                this.props.history.push('/');\n                window.location.reload();\n              });\n\n          }).catch((error) => {\n            window.alert(\"Error signing in: \" + error);\n          });\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updatePass = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n\n\n    render() {\n        return (\n            <>\n                <div className=\"login-container\">\n                    <h1 className=\"title\"> Login </h1>\n                    <form onSubmit={this.loginUser}>\n                        <input placeholder=\"Username or Email\" onChange={this.updateUser} />\n                        <br/>\n\n                        <input type=\"password\" placeholder=\"Password\" onChange={this.updatePass} />\n                        <br/>\n                        <br/>\n                        <button type=\"submit\"> Login </button>            \n                    </form>\n                    <br/>\n\n                </div>\n\n            </>\n        );\n    }\n}\n\nLogin.contextType = UpdateAuthContext;\n\nexport default withRouter(Login);","import React from 'react';\nimport CustomNavbar from '../components/CustomNavbar';\nimport axios from 'axios';\n\nclass UpdateMovie extends React.Component {\n    state = {\n        movieName: '',\n        addedBy: '',\n        teaser: '',\n        description: '',\n        rating: '',\n        runtime: '',\n        genre: '',\n        posterLink: ''\n    }\n\n    updateMovieName = (event) => {\n        this.setState({movieName: event.target.value});\n    }\n\n    updateAddedBy = (event) => {\n        this.setState({addedBy: event.target.value});\n    }\n\n    updateTeaser = (event) => {\n        this.setState({teaser: event.target.value});\n    }\n\n    updateDescription = (event) => {\n        this.setState({description: event.target.value});\n    }\n\n    updateRating = (event) => {\n        this.setState({rating: event.target.value});\n    }\n\n    updateRuntime = (event) => {\n        this.setState({runtime: event.target.value});\n    }\n\n    updateGenre = (event) => {\n        this.setState({genre: event.target.value});\n    }\n\n    updatePosterLink = (event) => {\n        this.setState({posterLink: event.target.value});\n    }\n\n    submitUpdateMovie = () => {\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/movie/updateMovie\",\n            data: {\n                movieName: this.state.movieName,\n                addedBy: this.state.addedBy,\n                teaser: this.state.teaser,\n                description: this.state.description,\n                rating: this.state.rating,\n                runtime: this.state.runtime,\n                genre: this.state.genre,\n                posterLink: this.state.posterLink\n            },\n            withCredentials: true\n          }).then((response) => {\n            if (response.data.success) {\n                window.alert(\"Movie of the week updated.\")\n            } else {\n                window.alert(\"Unable to update movie of the week.\")\n            }\n          }).catch((error) => {\n            window.alert(\"Error updating movie: \" + error);\n          });\n    }\n\n    render() {\n        return (\n            <>\n            <CustomNavbar />\n            <h1> Movie Name </h1>\n            <input value={this.state.movieName} onChange={this.updateMovieName} /> \n            <br/>\n\n            <h1> Added By </h1>\n            <input value={this.state.addedBy} onChange={this.updateAddedBy} /> \n            <br/>\n\n            <h1> Teaser </h1>\n            <input value={this.state.teaser} onChange={this.updateTeaser} /> \n            <br/>\n\n            <h1> Description </h1>\n            <input value={this.state.description} onChange={this.updateDescription} /> \n            <br/>\n\n            <h1> Rating </h1>\n            <input value={this.state.rating} onChange={this.updateRating} /> \n            <br/>\n\n            <h1> Runtime </h1>\n            <input value={this.state.runtime} onChange={this.updateRuntime} /> \n            <br/>\n\n            <h1> Genre </h1>\n            <input value={this.state.genre} onChange={this.updateGenre} /> \n            <br/>\n\n            <h1> Poster Link</h1>\n            <input value={this.state.posterLink} onChange={this.updatePosterLink} /> \n            <br/>\n            <br/>\n            <button onClick={this.submitUpdateMovie}>Update Movie</button>\n            </>\n        );\n    }\n}\n\nexport default UpdateMovie","import React from 'react';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport formatDate from '../utils/dateFormatterUtil';\nimport '../css/Suggestions.css';\n\nclass Suggestions extends React.Component {\n   state = {\n    enteredPool: false,\n    currentChoice: {},\n    isLoading: true, \n    userMovies: [],\n    otherMovies: []\n   }\n\n   componentDidMount() {\n    axios({\n        method: 'get', \n        url: \"https://movieotw.herokuapp.com/loadSuggestions\",\n        withCredentials: true\n      })\n  \n      .then((response) => {\n        // user not signed in\n        console.log(response.data.currentChoice);\n        this.setState({enteredPool: response.data.enteredPool, userMovies: response.data.userMovies, otherMovies: response.data.otherMovies, currentChoice: response.data.currentChoice, isLoading: false});\n  \n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })     \n   } \n\n   deleteSuggestion = (movieName) => {\n     if (window.confirm(\"Remove \" + movieName + \"?\")) {\n        // remove movie from database\n        axios({\n          method: 'post', \n          url: \"https://movieotw.herokuapp.com/movie/removeSuggestion\",\n          data: {\n            movie: movieName\n          },\n          withCredentials: true\n        })\n    \n        .then((response) => {\n          if (response.data.success) {\n            this.setState({userMovies: this.state.userMovies.filter((movie) => { return movie.name !== movieName})});\n            window.alert(\"Successfully removed \" + movieName + \".\");\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })     \n     }\n   }\n\n   setAsNextChoice = (movie) => {\n     if (movie.name === this.state.currentChoice.name && this.state.enteredPool) window.alert(\"Movie already set as current choice.\");\n     else if (window.confirm(\"Update current suggestion to \" + movie.name + \"?\")) {\n        this.setState({enteredPool: true});\n        if (movie.name == this.state.currentChoice) {\n          window.alert('hit');\n          return;\n        }\n\n        // update user's current suggestion\n        axios({\n          method: 'post', \n          url: \"http://movieotw.herokuapp.com/movie/updateSuggestion\",\n          data: {\n            previous: this.state.currentChoice.name,\n            new: movie.name\n          },\n          withCredentials: true\n        })\n\n        .then((response) => {\n          if (response.data.success) {\n            this.setState({currentChoice: movie});\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })   \n     }\n   }\n   \n   enterPool = () => {\n    // enter user in pool\n    axios({\n      method: 'post', \n      url: \"https://movieotw.herokuapp.com/user/enterPool\",\n      withCredentials: true\n    })\n\n    .then((response) => {\n      if (response.data.success) {\n        this.setState({enteredPool: true});\n      } else {\n        window.alert(response.data.val);\n      }\n    })\n    .catch((error) => {\n      window.alert(\"Unable to suggestions: \" + error);\n    })   \n  }\n\n   leavePool = () => {\n     if (window.confirm(\"Leave current pool?\")) {\n      // enter user in pool\n      axios({\n        method: 'post', \n        url: \"https://movieotw.herokuapp.com/user/leavePool\",\n        withCredentials: true\n      })\n\n      .then((response) => {\n        if (response.data.success) {\n          this.setState({enteredPool: false});\n        } else {\n          window.alert(response.data.val);\n        }\n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })   \n     }\n   }\n\n   render() {\n     if (this.state.isLoading) {\n       return <CustomNavbar loading={true} />\n     }\n\n    return (\n        <>  \n        <CustomNavbar />\n        <h1 className=\"suggestion-title\"> Current Choice </h1>\n        {this.state.enteredPool == false ? \n          <div style={{textAlign: 'center'}}>\n            <p> Join the pool! </p>\n            <button style={{align: 'center'}} onClick={this.enterPool}> Enter Pool </button> \n          </div>\n          :\n          <div className=\"suggestion-container\"> \n            <p> {this.state.currentChoice.name}</p>\n            <p> Date added {formatDate(this.state.currentChoice.date)} </p>\n            <p> Added by {this.state.currentChoice.addedBy} </p>\n            <button onClick={() => {this.deleteSuggestion(this.state.currentChoice.name)}}> Delete </button>\n            <button onClick={this.leavePool}> Leave Pool </button>\n          </div>\n        }\n        <h1 className=\"suggestion-title\"> My Unwatched Suggestions </h1>\n        {this.state.userMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Added on {formatDate(movie.date)} </p>\n                <button onClick={() => {this.deleteSuggestion(movie.name)}}> Delete </button>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest Now </button>\n            </div>\n        ))}\n\n        <h1 className=\"suggestion-title\"> What Everyone Else Wants to Watch </h1>\n        {this.state.otherMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Date added {formatDate(movie.date)} </p>\n                <p> Added by {movie.addedBy} </p>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest Now </button>\n            </div>\n        ))}\n        </>\n    );\n   }\n}\n\nexport default withRouter(Suggestions);","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { LoginContext } from './Auth';\n\nconst PrivateRoute = ({render: ReactComponent, ...rest}) => {\n    const isLoggedIn = useContext(LoginContext).loggedIn;\n    return (\n        <Route {...rest} render={props => (isLoggedIn ? <ReactComponent {...props} /> : <Redirect to='/login'/>)} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\n\nclass Profile extends React.Component {\n   state = {\n      email: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      username: ''\n   }\n\n   updateEmail = (event) => {\n      this.setState({email: event.target.value});\n   }\n\n   updateUsername = (event) => {\n      this.setState({username: event.target.value});\n   }\n\n   updateCurrentPassword = (event) => {\n      this.setState({currentPassword: event.target.value});\n   }\n\n   updateNewPassword = (event) => {\n      this.setState({newPassword: event.target.value});\n   }\n\n   updateConfirmNewPassword = (event) => {\n      this.setState({confirmNewPassword: event.target.value});\n   }\n\n   submitEmailUpdate = () => {\n      if (this.state.email.length === 0) {\n         window.alert('Email field empty.');\n         return;\n      }\n\n      if (!this.state.email.includes('@')) {\n         window.alert('Domain (@) not specified.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateEmail',\n         data: {\n             email: this.state.email\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Email has successfully updated.');\n            this.setState({email:''});\n          } else {\n            window.alert(\"Email did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update email: \" + error);\n       });\n   }\n\n   submitUsernameUpdate = () => {\n      if (this.state.username.length === 0) {\n         window.alert('Username field empty.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateUsername',\n         data: {\n             username: this.state.username\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Username has successfully updated.');\n            this.setState({username:''});\n          } else {\n            window.alert(\"Username did not update, please try again.\");\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update username: \" + error);\n       })\n\n   }\n\n   submitPasswordUpdate = () => {\n      if (this.state.currentPassword.length === 0) {\n         window.alert(\"Current password field is empty.\");\n         return;\n      }\n\n      if (this.state.newPassword.length === 0) {\n         window.alert(\"New password field is empty.\");\n         return;\n      }\n\n      if (this.state.confirmNewPassword !== this.state.newPassword) {\n         window.alert(\"New passwords did not match. Please try again.\");\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updatePassword',\n         data: {\n             newPassword: this.state.newPassword,\n             currPassword: this.state.currentPassword\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Password has successfully updated.');\n            this.setState({currentPassword:''});\n            this.setState({newPassword:''});\n            this.setState({confirmNewPassword:''});\n          } else {\n            window.alert(\"Password did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update password: \" + error);\n       })\n   }\n\n   render() {\n     return (\n        <>\n        <h1> Update Email </h1>\n        <input value={this.state.email} onChange={this.updateEmail} /> \n        <br/>\n        <button onClick={this.submitEmailUpdate}>Update Email </button>\n        <h1> Update Username </h1>\n        <input value={this.state.username} onChange={this.updateUsername} /> \n        <br/>\n        <button onClick={this.submitUsernameUpdate}>Update Username</button>\n        <h1> Update Password </h1>\n        <label> Current password </label>\n        <input value={this.state.currentPassword} type=\"password\" onChange={this.updateCurrentPassword} /> \n        <br/>\n        <label> New Password </label> \n        <input value={this.state.newPassword} type=\"password\" onChange={this.updateNewPassword} /> \n        <br/>\n        <label> Confirm New Password </label> \n        <input value={this.state.confirmNewPassword} type=\"password\" onChange={this.updateConfirmNewPassword} /> \n        <br/>\n        <button onClick={this.submitPasswordUpdate}>Update Password </button>\n        </>\n     );\n   } \n}\n\nexport default Profile;","import React, { useContext } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Login from './pages/Login';\nimport UpdateMovie from './pages/UpdateMovie';\nimport Suggestions from './pages/Suggestions';\nimport PrivateRoute from './components/PrivateRoute';\nimport { LoginContext } from './components/Auth';\nimport Profile from './pages/Profile';\nimport CustomNavbar from './components/CustomNavbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nrequire('dotenv').config()\n\n/*\nclass App extends React.Component {\n  componentDidMount () {\n    console.log(this.context);\n  }\n\n  render() {\n    return(\n          <>\n          <AuthProvider>\n          <CustomNavbar />\n            <Router>\n              <PrivateRoute path=\"/\"            exact render={(props) => <Home />} />\n              <Route path=\"/login\"              exact render={(props) => <Login />} />\n              <PrivateRoute path=\"/suggestions\" exact render={(props) => <Suggestions />} />\n              <PrivateRoute path=\"/profile\"     exact render={(props) => <Profile />} />\n              <PrivateRoute path=\"/updateMovie\" exact render={(props) => <UpdateMovie />} />\n            </Router>\n          </AuthProvider>\n          </>\n    );\n  }\n}\n*/\n\nconst App = ({children}) => {\n  let loginStatus = useContext(LoginContext);\n  return (\n    <>\n     <Router>\n        <CustomNavbar user={loginStatus} />\n        <PrivateRoute path=\"/\"            exact render={(props) => <Home />} />\n        <Route path=\"/login\"              exact render={(props) => <Login />} />\n        <PrivateRoute path=\"/suggestions\" exact render={(props) => <Suggestions />} />\n        <PrivateRoute path=\"/profile\"     exact render={(props) => <Profile />} />\n        <PrivateRoute path=\"/updateMovie\" exact render={(props) => <UpdateMovie />} />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './components/Auth';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <AuthProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction formatDate(date) {\n    date = new Date(date);\n    return (months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear())\n}\n\nmodule.exports = formatDate;"],"sourceRoot":""}