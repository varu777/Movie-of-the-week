{"version":3,"sources":["utils/dateFormatterUtil.js","components/SuggestionForm.js","components/MovieContainer.js","Home.js","components/Auth.js","pages/Login.js","components/CustomNavbar.js","pages/WatchedMovie.js","pages/Suggestions.js","components/PrivateRoute.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["months","module","exports","date","Date","getMonth","getDate","getFullYear","SuggestionForm","state","movieSuggestion","movieNote","submitSuggestion","length","movie","axios","method","url","data","trim","withCredentials","then","response","success","setState","window","alert","val","movieIdx","catch","error","console","log","updateMovie","event","target","value","updateUser","user","updateNote","showReviewForm","style","marginRight","this","onChange","onClick","React","Component","MovieContainer","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","Home","isMovieSelected","movieOTW","userOTW","noteOTW","description","posterLink","previousMovies","currentPool","upcomingMovies","recentUpdates","isLoading","loggedIn","updateMovieSort","movieType","sortBy","process","movies","updateFormat","movieOTWData","watchOTW","watchedMovies","note","genre","rating","runtime","imgLoaded","context","display","gridRow","marginTop","textDecoration","href","height","width","onLoad","src","marginBottom","textAlign","float","map","i","suggestion","name","up","watched","color","formatDate","defaultValue","e","disabled","withRouter","LoginContext","createContext","loggedin","currentUser","UpdateAuthContext","AuthProvider","children","loginStatus","useContext","useState","setLoginStatus","loading","setLoadingStatus","updateAuth","isLoggedIn","useEffect","Provider","Login","password","loginUser","preventDefault","username","localStorage","setItem","history","push","location","reload","message","updatePass","onSubmit","placeholder","type","contextType","CustomNavbar","logout","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","to","Button","variant","WatchedMovie","movieName","selectedMovie","handleChange","submitWatched","filter","selected","Suggestions","enteredPool","currentChoice","userMovies","otherMovies","removeSuggestion","confirm","setAsNextChoice","previous","new","enterPool","leavePool","align","PrivateRoute","ReactComponent","render","rest","Profile","email","currentPassword","newPassword","confirmNewPassword","updateEmail","updateUsername","updateCurrentPassword","updateNewPassword","updateConfirmNewPassword","submitEmailUpdate","includes","submitUsernameUpdate","submitPasswordUpdate","currPassword","require","config","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e80f13c.chunk.js","sourcesContent":["const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction formatDate(date) {\n    date = new Date(date);\n    return (months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear())\n}\n\nmodule.exports = formatDate;","import React from 'react';\nimport axios from 'axios';\nimport '../css/SuggestionForm.css';\n\n// TODO convert this to functional component\nclass SuggestionForm extends React.Component {\n    state = {\n        movieSuggestion: '', \n        movieNote: '',\n    };\n\n    submitSuggestion = () => {\n        if (this.state.movieSuggestion.length === 0) {\n            window.alert(\"Movie name cannot be empty.\");\n            return;\n        }\n\n        const movie = this.state.movieSuggestion;\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/SuggestMovie\",\n            data: {\n                movie: movie.trim(), \n                movieNote: this.state.movieNote\n            },\n            withCredentials: true\n        })\n        .then((response) => {\n        if (response.data.success) {\n            this.setState({movieSuggestion:'', movieNote:''});\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.movieIdx);\n        } else {\n            // error occured\n            window.alert(response.data.val);\n        }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    updateMovie = (event) => {\n        this.setState({movieSuggestion: event.target.value})\n    } \n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updateNote = (event) => {\n        this.setState({movieNote: event.target.value});\n    }\n\n    showReviewForm = () => {\n        window.alert(\"clicked\");\n    }\n\n    render() {\n        return(\n            <div>\n                <h1> Suggest a Movie </h1>\n\n                <label style={{marginRight: '1vw'}}> Movie Title: </label>\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\n                <br/>\n\n                <button onClick={this.submitSuggestion}> Suggest </button>\n            </div>\n        );\n    }\n}\n\n\nexport default SuggestionForm;","import React from 'react';\nimport '../css/PreviousMovie.css';\n\nclass MovieContainer extends React.Component {\n    state = {\n        displayReviewForm: false,\n        reviewSubmitted: false,\n        reviewScoreInput: -1.0,\n        finalReviewScore: -1.0,\n        user: ''\n    }\n\n    displayReviewForm = () => {\n        this.setState({displayReviewForm: true});\n    }\n\n    cancelReview = () => {\n        this.setState({displayReviewForm: false})\n    }\n\n    updateReviewScore = (event) => {\n        this.setState({reviewScore: event.target.value});\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n    \n    submitReview = () => {\n        try {\n            var val = parseFloat(this.state.reviewScore);\n            window.alert(val);\n        } catch {\n            window.alert(\"Error\");\n            return;\n        }\n\n        this.setState({reviewSubmitted: true})\n        //this.setState({})\n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <p> Movie title: {this.props.movieTitle} </p>\n                <p> Suggested by: {this.props.addedBy} </p>\n                <p> Watched on: {this.props.dateWatched} </p>\n                <p> Teaser Note: {this.props.teaser} </p>\n                {/*\n                <p> Average Review: {this.props.avgReview} </p>\n                <p> Review Count: {this.props.reviewCount} </p>\n                <button onClick={this.displayReviewForm}> Make Review </button>\n                {this.state.displayReviewForm ? \n                   <div> \n                        <label> Score (1.00-10.00): </label>\n                        <input onChange={this.updateReviewScore} />\n\n                        <label> Reviewed By: </label>\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\n                        <option value=\"\">Felix</option>\n                        <option value=\"\">Hector</option>\n                        <option value=\"\">Jason</option>\n                        <option value=\"\">Jesse</option>\n                        <option value=\"\">Jorge</option>\n                        <option value=\"\">Juan</option>\n                        <option value=\"\">Octavio</option>\n                        </select>\n\n                        <button onClick={this.submitReview}> Submit </button> \n                        <button onClick={this.cancelReview}> Cancel </button>\n\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\n                   </div>\n                   : \n                   null \n                }\n                */\n                }\n            </div>\n        );\n    }\n}\n\nexport default MovieContainer;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SuggestionForm from './components/SuggestionForm';\nimport MovieContainer from './components/MovieContainer';\nimport formatDate from './utils/dateFormatterUtil';\n\nclass Home extends React.Component {\n  state = {\n    isMovieSelected: false,\n    movieOTW: '',\n    userOTW: '', \n    date: '',\n    noteOTW: '',\n    description: '',\n    posterLink: '',\n    previousMovies: [],\n    currentPool: [],\n    upcomingMovies: [],\n    recentUpdates: [],\n    isLoading: true,\n    loggedIn: false\n  }\n  \n  componentDidMount () {\n    // retrieve watched movies\n    axios({\n      method: 'get', \n      url: process.env.REACT_APP_HOME_DATA_URL,\n      withCredentials: true\n    })\n\n    .then((response) => {\n      // get motw data\n      let movieOTWData = response.data.movieOTW;\n      let user = response.data.user;\n\n      // display motw if it's not blank\n      let isMovieSelected = (movieOTWData.watchOTW.length === 0) ? false : true;\n      \n      let movies = response.data.watchedMovies;\n      this.setState({\n        previousMovies: movies, \n        isMovieSelected: isMovieSelected,\n        movieOTW: movieOTWData.watchOTW,\n        userOTW: user, \n        noteOTW: movieOTWData.note, \n        genre: movieOTWData.genre,\n        rating: movieOTWData.rating,\n        posterLink: movieOTWData.posterLink,\n        runtime: movieOTWData.runtime,\n        upcomingMovies: response.data.upcomingMovies, \n        description: movieOTWData.description,\n        currentPool: response.data.currentPool,\n        recentUpdates: response.data.recentUpdates,\n        isLoading: false,\n        imgLoaded: false \n      });\n    })\n    .catch((error) => {\n      window.alert(\"Unable to load home data: \" + error);\n    })\n\n    this.setState({loggedIn: this.context});\n  }\n  \n  updateMovieSort = (movieType, event) => {\n    // gets newly selected filter type\n    let sortBy = event.target.value;\n\n    // sort watched movies array by new filter\n    axios({\n      method: 'post',\n      url: process.env.REACT_APP_SORT_MOVIES_URL,\n      data: {\n          sortBy: sortBy,\n          movieType: movieType\n      },\n      withCredentials: true\n    }).then((response) => {\n      // update state of respective movie array\n      if (movieType === \"watched\") this.setState({previousMovies: response.data.movies});\n      else this.setState({upcomingMovies: response.data.movies});\n\n    }).catch((error) => {\n      window.alert(\"Unable to apply filter: \" + error);\n    });\n  }\n\n  updateFormat = () => {\n    window.alert(\"starting\");\n    axios({\n      method:'post',\n      url: process.env.REACT_APP_UPDATE_FORMAT_URL,\n      data:{},\n      withCredentials: true\n    })\n  }\n\n\n  render() {\n\n    return (\n      <>\n      <div style={{display: this.state.imgLoaded == true ? 'grid' : 'none'}} className=\"App\">\n        <div style={{gridRow: '1', marginTop: '15px'}}>\n        <h1 className=\"title\">Selected Movie </h1>\n        {this.state.isMovieSelected ? \n            <div className=\"motw-container borders\"> \n              <h1 className=\"title\"> {this.state.movieOTW} </h1>\n              <h4> {this.state.date} </h4>\n              <p> Location: <a style={{textDecoration: 'underline'}} href={process.env.REACT_APP_ZOOM_LINK}>Zoom Link</a></p>\n              <p className=\"addedBy\"> Added by {this.state.userOTW} </p>\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\n              <img style={{height: '45%', width: '45%'}} onLoad={() => {this.setState({imgLoaded:true})}}src={this.state.posterLink}></img> \n              <div className=\"description-container\">\n                <p style={{marginBottom: '-.5px'}}> Description: </p>\n                <p> {this.state.description} </p>\n\n                <p> Genre: {this.state.genre} | Runtime: {this.state.runtime} | Rated {this.state.rating}</p>\n\n              </div>\n            </div> \n            : \n            <p style={{textAlign: 'center'}}> No movie selected yet for this week.</p>\n        }\n        </div>\n\n        <br />\n        <div style={{gridRow: '1', textAlign: 'center'}}>\n        <div style={{marginTop: '15px'}} className=\"center\">\n          <div style={{float: 'right'}}>\n            <h1 className=\"title\"> Statistics </h1>\n            <p>Total Movies Suggested: {this.state.upcomingMovies.length + this.state.previousMovies.length} </p>\n            <p>Movies Watched: {this.state.previousMovies.length} </p>\n            <p>Upcoming Movies: {this.state.upcomingMovies.length} </p>\n            <p>Current Pool Size: {this.state.currentPool.length} </p>\n            <p>Members: 7 </p>\n          </div>\n        <SuggestionForm />\n        <h1 style={{marginTop: '15px'}}> Current Pool </h1>\n        {this.state.currentPool.map((user, i) => (\n          <p key={i}> {user.suggestion} - {user.name} </p>\n        ))}\n\n        <h1 style={{marginTop: '15px'}}> Recent Updates </h1>\n        {this.state.recentUpdates.map((up, i) => {\n          return up.watched == true ? <p> <a style={{color: '#90EE90'}}> Movie Watched: </a> <a style={{color:'#FF7F50'}}> {up.name} </a> was watched on {formatDate(up.date)}</p> : <p key={i}> <a style={{color: 'Salmon'}}> Movie Added: </a> <a style={{color: '#87CEFA'}}> {up.addedBy} </a>recommended <a style={{color:'#FF7F50'}}> {up.name} </a> on {formatDate(up.date)}</p>\n        })}\n\n        {/*<a href='/updates'> View All >>> </a> */}\n        </div>\n        </div>\n\n        <div style={{gridRow: '2', textAlign:'center'}}>\n        <h1> Upcoming Movies </h1>\n        <label style={{marginRight: '.5vw'}}> Sort by </label>\n        <select name=\"Name\" defaultValue=\"Date-Descending\" onChange={(e) => {this.updateMovieSort(\"upcoming\", e)}}>\n          <option value={\"recent\"}>Recent First</option>\n          <option value={\"oldest\"}>Oldest First</option>\n          <option value={\"name\"}>Movie Name</option>\n          <option disabled={true} value={\"o-rating\"}>Overall Ratings</option>\n          <option disabled={true} value={\"u-rating\"}>My Ratings</option>\n        </select>\n        {this.state.upcomingMovies.map((movie, i) => (\n          <div>\n            <MovieContainer key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={formatDate(movie.date)} />\n          </div>\n        ))}\n        </div>\n        \n        <div style={{gridRow: '2', textAlign: 'center'}}>\n        <h1> Movies Watched so Far </h1>\n        <label style={{marginRight: '.5vw'}}> Sort by </label>\n        <select name=\"Name\" defaultValue=\"Date-Descending\" onChange={(e) => {this.updateMovieSort(\"watched\", e)}}>\n          <option value={\"recent\"}>Recent First</option>\n          <option value={\"oldest\"}>Oldest First</option>\n          <option value={\"name\"}>Movie Name</option>\n          <option disabled={true} value={\"o-rating\"}>Overall Ratings</option>\n          <option disabled={true} value={\"u-rating\"}>My Ratings</option>\n        </select>\n        {this.state.previousMovies.map((movie, i) => (\n          <MovieContainer key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={formatDate(movie.date)} />\n        ))}\n        </div>\n        <br />\n        <button onClick={this.updateFormat}> Update </button>\n        </div>\n      </>\n    );\n  }\n}\n\n\nexport default withRouter(Home);\n","import  React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LoginContext      = React.createContext({loggedin: false, currentUser: {}});\nconst UpdateAuthContext = React.createContext(true);\n\nconst AuthProvider = ({children}) => {\n    const loginStatus = useContext(LoginContext);\n    const [loggedIn, setLoginStatus]  = useState(loginStatus);\n    const [loading, setLoadingStatus] = useState(true);\n\n    let updateAuth = function () {\n        return axios({\n            method: 'get', \n            url: \"http://localhost:9000/loginCheck\",\n            withCredentials: true\n          })\n        .then((response) => {\n            if (response.data.isLoggedIn) {\n                setLoginStatus({loggedIn: true, currentUser: response.data.currentUser});\n            } else {\n                setLoginStatus({loggedIn: false, currentUser: {}});\n            }\n            setLoadingStatus(false);\n        })\n        .catch((error) => {\n            window.alert(\"Unable to load home data: \" + error);\n            setLoginStatus({loggedIn: false, currentUser: {}});\n            setLoadingStatus(false);\n        })\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, [])\n\n    if (loading) {\n        return (\n            // render nothing if auth check hasn't finished yet\n            <> </>\n        );\n    }\n\n    return (\n        <UpdateAuthContext.Provider value={updateAuth}>\n            <LoginContext.Provider value={loggedIn}>\n                {children}\n            </LoginContext.Provider>\n        </UpdateAuthContext.Provider>\n    );\n}\n\nexport {UpdateAuthContext, AuthProvider, LoginContext}","import React from 'react';\nimport { UpdateAuthContext } from '../components/Auth';\nimport axios from 'axios';\nimport '../css/Login.css';\nimport { withRouter } from 'react-router';\n\nclass Login extends React.Component {\n    state = {\n        user: '',\n        password: '',\n    }\n\n    loginUser = (e) => {\n        e.preventDefault();\n        // both fields empty check\n        if (this.state.user.length == 0 && this.state.password.length == 0) {\n            window.alert(\"Both fields cannot be empty.\");\n            return;\n        }\n\n        // empty username check\n        if (this.state.user.length == 0) {\n            window.alert(\"Email/Username field cannot be empty.\");\n            return; \n        }\n\n        // empty password check\n        if (this.state.password.length == 0) {\n            window.alert(\"Password field cannot be empty.\");\n            return;\n        }\n\n        // attempt to sign in user\n        axios({\n            method: 'post',\n            url: process.env.REACT_APP_LOGIN_URL,\n            data: {\n                username: this.state.user,\n                password: this.state.password\n            },\n            withCredentials: true\n          }).then((response) => {\n              // login failed\n              if (!response.data.success) {\n                window.alert(response.data.message);\n                return;\n              }\n\n              localStorage.setItem('loggedIn', true); \n              let updateAuth = this.context;\n              updateAuth().then(() => {\n                this.props.history.push('/');\n                window.location.reload();\n              });\n\n          }).catch((error) => {\n            window.alert(\"Error signing in: \" + error);\n          });\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updatePass = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n\n\n    render() {\n        return (\n            <>\n                <div className=\"login-container\">\n                    <h1 className=\"title\"> Login </h1>\n                    <form onSubmit={this.loginUser}>\n                        <input placeholder=\"Username or Email\" onChange={this.updateUser} />\n                        <br/>\n\n                        <input type=\"password\" placeholder=\"Password\" onChange={this.updatePass} />\n                        <br/>\n                        <br/>\n                        <button type=\"submit\"> Login </button>            \n                    </form>\n                    <br/>\n\n                </div>\n\n            </>\n        );\n    }\n}\n\nLogin.contextType = UpdateAuthContext;\n\nexport default withRouter(Login);","import React, { createContext } from 'react';\nimport { withRouter } from 'react-router';\nimport { Navbar, NavDropdown, Nav, Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { LoginContext } from '../components/Auth';\n\nclass CustomNavbar extends React.Component {\n    state = {\n        loggedIn: this.props.user.loggedIn,\n        currentUser: this.props.user.currentUser === null ? \"\" : this.props.user.currentUser.username\n    }\n\n    logout = () => {\n        axios({\n            method: 'get',\n            url: 'http://localhost:9000/logout',\n            withCredentials: true,\n            loggedIn: this.context.loggedIn\n        }).then((response) => {\n            if (!response.data.success) {\n                window.alert(\"Unable to logout, please try again.\");\n                return;\n            }\n\n            this.setState({loggedIn: false});\n            localStorage.setItem('loggedIn', false);\n            window.location.reload();\n        }).catch((error) => {\n            window.alert(\"Unable to logout: \" + error);\n        });\n    }\n\n    componentDidMount() {\n        this.setState({loggedIn: this.props.user.loggedIn});\n        this.setState({currentUser: this.props.user.currentUser.username})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\">\n                <Navbar.Brand style={{color: 'salmon'}}href=\"/\">Movie Of The Week</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"#home\">Leaderboard</Nav.Link>\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"/suggestions\">Suggestions</Nav.Link>\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"/watchedMovie\">Add to Watched List</Nav.Link>\n\n                    </Nav>\n                    <Form inline>\n                    \n                    {!this.state.loggedIn ? \n                        <>\n                        <LinkContainer to=\"/login\">\n                            <Button color=\"green\" variant=\"secondary\">\n                               Login \n                            </Button>\n                        </LinkContainer>\n                        </>\n                        :\n                        <>\n\n                        {this.state.currentUser === \"\" ?  <p></p> : <p style={{marginRight: '10px', marginTop: '12px'}}> Welcome back, {this.state.currentUser}!</p>}\n                        <LinkContainer style={{marginRight: '5px'}} to=\"/profile\">\n                            <Button color=\"blue\" variant=\"secondary\">\n                              Profile \n                            </Button>\n                        </LinkContainer>\n                        <Button onClick={this.logout} color=\"blue\" variant=\"secondary\">\n                            Logout    \n                        </Button>\n                        </>\n                    }\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default withRouter(CustomNavbar);","import React from 'react';\nimport CustomNavbar from '../components/CustomNavbar';\nimport axios from 'axios';\n\nclass WatchedMovie extends React.Component {\n    state = {\n        movieName: '',\n        movies: [],\n        selectedMovie: 'Choose Movie',\n        loading: true\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'get',\n            url: process.env.REACT_APP_GET_MOVIES_URL,\n            withCredentials: true\n        }).then((response) => {\n            if (response.data.success) \n                this.setState({movies: response.data.movies});\n\n        }).catch((error) => {window.alert(error)});\n\n        this.setState({loading: false});\n    }\n\n    handleChange = (event) => {\n        this.setState({selectedMovie: event.target.value});\n    }\n\n    submitWatched = () => {\n        console.log(\"submitting\");\n        if (this.state.selectedMovie === 'Choose Movie') {\n            window.alert(\"Invalid movie.\");\n            return;\n        }\n            \n        axios({\n            method: 'post',\n            url: process.env.REACT_APP_WATCHED_MOVIE_URL,\n            data: {\n                movie: this.state.selectedMovie\n            },\n            withCredentials: true\n        }).then((response) => {\n            if (response.data.success) {\n                window.alert(\"Added \" + this.state.selectedMovie + \" to watched list.\");\n                this.setState({movies: this.state.movies.filter(movie => movie.name.trim() !== this.state.selectedMovie)});\n                this.setState({selectedMovie: 'Choose Movie'});\n            } else {\n                window.alert(response.data.val);\n            }\n\n        }).catch((error) => {window.alert(error)});\n\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <></>;\n        }\n\n        return (\n            <>\n            <h1> Movie Name </h1>\n            <select value={this.state.selectedMovie} onChange={this.handleChange}> \n                <option selected disabled> Choose Movie </option>\n                {this.state.movies.map((movie) => (\n                    <option> {movie.name} </option>\n                ))}\n            </select>\n            <button onClick={this.submitWatched}> Submit </button>\n\n            <br/>\n\n \n           \n            </>\n        );\n    }\n}\n\nexport default WatchedMovie;","import React from 'react';\nimport axios from 'axios';\nimport formatDate from '../utils/dateFormatterUtil';\nimport '../css/Suggestions.css';\n\nclass Suggestions extends React.Component {\n   state = {\n    enteredPool: false,\n    currentChoice: {},\n    isLoading: true, \n    userMovies: [],\n    otherMovies: []\n   }\n\n   componentDidMount() {\n    axios({\n        method: 'get', \n        url: process.env.REACT_APP_LOAD_SUGGESTIONS_URL,\n        withCredentials: true\n      })\n  \n      .then((response) => {\n        // user not signed in\n        this.setState({enteredPool: response.data.enteredPool, userMovies: response.data.userMovies, otherMovies: response.data.otherMovies, currentChoice: response.data.currentChoice, isLoading: false});\n  \n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })     \n   } \n\n   removeSuggestion = (movieName) => {\n     if (window.confirm(\"Remove \" + movieName + \"?\")) {\n        // remove movie from database\n        axios({\n          method: 'post', \n          url: process.env.REACT_APP_REMOVE_SUGGESTION_URL,\n          data: {\n            movie: movieName\n          },\n          withCredentials: true\n        })\n    \n        .then((response) => {\n          if (response.data.success) {\n            this.setState({userMovies: this.state.userMovies.filter((movie) => { return movie.name !== movieName})});\n            window.alert(\"Successfully removed \" + movieName + \".\");\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })     \n     }\n   }\n\n   setAsNextChoice = (movie) => {\n     if (movie.name === this.state.currentChoice.name && this.state.enteredPool) window.alert(\"Movie already set as current choice.\");\n     else if (window.confirm(\"Update current suggestion to \" + movie.name + \"?\")) {\n        this.setState({enteredPool: true});\n        if (movie.name == this.state.currentChoice) {\n          window.alert('hit');\n          return;\n        }\n\n        // update user's current suggestion\n        axios({\n          method: 'post', \n          url: process.env.REACT_APP_UPDATE_SUGGESTION_URL,\n          data: {\n            previous: this.state.currentChoice.name,\n            new: movie.name\n          },\n          withCredentials: true\n        })\n\n        .then((response) => {\n          if (response.data.success) {\n            this.setState({currentChoice: movie});\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })   \n     }\n   }\n   \n   enterPool = () => {\n    // enter user in pool\n    axios({\n      method: 'post', \n      url: process.env.REACT_APP_ENTER_POOL_URL,\n      withCredentials: true\n    })\n\n    .then((response) => {\n      if (response.data.success) {\n        this.setState({enteredPool: true});\n      } else {\n        window.alert(response.data.val);\n      }\n    })\n    .catch((error) => {\n      window.alert(\"Unable to suggestions: \" + error);\n    })   \n  }\n\n   leavePool = () => {\n     if (window.confirm(\"Leave current pool?\")) {\n      // enter user in pool\n      axios({\n        method: 'post', \n        url: process.env.REACT_APP_LEAVE_POOL_URL,\n        withCredentials: true\n      })\n\n      .then((response) => {\n        if (response.data.success) {\n          this.setState({enteredPool: false});\n        } else {\n          window.alert(response.data.val);\n        }\n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })   \n     }\n   }\n\n   render() {\n     if (this.state.isLoading) {\n       return <></>\n     }\n\n    return (\n        <>  \n        <h1 className=\"suggestion-title\"> Current Choice </h1>\n        {this.state.enteredPool == false ? \n          <div style={{textAlign: 'center'}}>\n            <p> Suggest a movie below to join the pool! </p>\n            <button style={{align: 'center'}} onClick={this.enterPool}> Choose Randomly </button> \n          </div>\n          :\n          <>\n          <div style={{textAlign: 'center'}}>\n            <p> Override this choice by suggesting a different movie. </p>\n          </div>\n          <div className=\"suggestion-container\"> \n            <p> {this.state.currentChoice.name}</p>\n            <p> Date added {formatDate(this.state.currentChoice.date)} </p>\n            <p> Added by {this.state.currentChoice.addedBy} </p>\n            <button onClick={() => {this.removeSuggestion(this.state.currentChoice.name)}}> Delete </button>\n            <button onClick={this.leavePool}> Leave Pool </button>\n          </div>\n          </>\n        }\n\n        <h1 className=\"suggestion-title\"> My Unwatched Suggestions </h1>\n        {this.state.userMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Added on {formatDate(movie.date)} </p>\n                <button onClick={() => {this.removeSuggestion(movie.name)}}> Delete </button>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest </button>\n            </div>\n        ))}\n\n        <h1 className=\"suggestion-title\"> What Everyone Else Wants to Watch </h1>\n        {this.state.otherMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Date added {formatDate(movie.date)} </p>\n                <p> Added by {movie.addedBy} </p>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest </button>\n            </div>\n        ))}\n        </>\n    );\n   }\n}\n\nexport default Suggestions;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { LoginContext } from './Auth';\n\nconst PrivateRoute = ({render: ReactComponent, ...rest}) => {\n    const isLoggedIn = useContext(LoginContext).loggedIn;\n    return (\n        <Route {...rest} render={props => (isLoggedIn ? <ReactComponent {...props} /> : <Redirect to='/login'/>)} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport axios from 'axios';\n\nclass Profile extends React.Component {\n   state = {\n      email: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      username: ''\n   }\n\n   updateEmail = (event) => {\n      this.setState({email: event.target.value});\n   }\n\n   updateUsername = (event) => {\n      this.setState({username: event.target.value});\n   }\n\n   updateCurrentPassword = (event) => {\n      this.setState({currentPassword: event.target.value});\n   }\n\n   updateNewPassword = (event) => {\n      this.setState({newPassword: event.target.value});\n   }\n\n   updateConfirmNewPassword = (event) => {\n      this.setState({confirmNewPassword: event.target.value});\n   }\n\n   submitEmailUpdate = () => {\n      if (this.state.email.length === 0) {\n         window.alert('Email field empty.');\n         return;\n      }\n\n      if (!this.state.email.includes('@')) {\n         window.alert('Domain (@) not specified.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: process.env.REACT_APP_UPDATE_EMAIL_URL,\n         data: {\n             email: this.state.email\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Email has successfully updated.');\n            this.setState({email:''});\n          } else {\n            window.alert(\"Email did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update email: \" + error);\n       });\n   }\n\n   submitUsernameUpdate = () => {\n      if (this.state.username.length === 0) {\n         window.alert('Username field empty.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: process.env.REACT_APP_UPDATE_USERNAME_URL,\n         data: {\n             username: this.state.username\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Username has successfully updated.');\n            this.setState({username:''});\n          } else {\n            window.alert(\"Username did not update, please try again.\");\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update username: \" + error);\n       })\n\n   }\n\n   submitPasswordUpdate = () => {\n      if (this.state.currentPassword.length === 0) {\n         window.alert(\"Current password field is empty.\");\n         return;\n      }\n\n      if (this.state.newPassword.length === 0) {\n         window.alert(\"New password field is empty.\");\n         return;\n      }\n\n      if (this.state.confirmNewPassword !== this.state.newPassword) {\n         window.alert(\"New passwords did not match. Please try again.\");\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: process.env.REACT_APP_UPDATE_PASSWORD_URL,\n         data: {\n             newPassword: this.state.newPassword,\n             currPassword: this.state.currentPassword\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Password has successfully updated.');\n            this.setState({currentPassword:''});\n            this.setState({newPassword:''});\n            this.setState({confirmNewPassword:''});\n          } else {\n            window.alert(\"Password did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update password: \" + error);\n       })\n   }\n\n   render() {\n     return (\n        <>\n        <h1> Update Email </h1>\n        <input value={this.state.email} onChange={this.updateEmail} /> \n        <br/>\n        <button onClick={this.submitEmailUpdate}>Update Email </button>\n        <h1> Update Username </h1>\n        <input value={this.state.username} onChange={this.updateUsername} /> \n        <br/>\n        <button onClick={this.submitUsernameUpdate}>Update Username</button>\n        <h1> Update Password </h1>\n        <label> Current password </label>\n        <input value={this.state.currentPassword} type=\"password\" onChange={this.updateCurrentPassword} /> \n        <br/>\n        <label> New Password </label> \n        <input value={this.state.newPassword} type=\"password\" onChange={this.updateNewPassword} /> \n        <br/>\n        <label> Confirm New Password </label> \n        <input value={this.state.confirmNewPassword} type=\"password\" onChange={this.updateConfirmNewPassword} /> \n        <br/>\n        <button onClick={this.submitPasswordUpdate}>Update Password </button>\n        </>\n     );\n   } \n}\n\nexport default Profile;","import React, { useContext } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Login from './pages/Login';\nimport WatchedMovie from './pages/WatchedMovie';\nimport Suggestions from './pages/Suggestions';\nimport PrivateRoute from './components/PrivateRoute';\nimport { LoginContext } from './components/Auth';\nimport Profile from './pages/Profile';\nimport CustomNavbar from './components/CustomNavbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nrequire('dotenv').config()\n\n\nfunction App() {\n    let loginStatus = useContext(LoginContext);\n    return (\n        <>\n            <Router>\n                <CustomNavbar user={loginStatus} />\n                <PrivateRoute exact path=\"/\">\n                    <Home />\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/suggestions\">\n                    <Suggestions />\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/profile\">\n                    <Profile />\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/watchedMovie\">\n                    <WatchedMovie />\n                </PrivateRoute>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n            </Router>\n        </>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './components/Auth';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <AuthProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}