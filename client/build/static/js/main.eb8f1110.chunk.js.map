{"version":3,"sources":["utils/dateFormatterUtil.js","components/SuggestionForm.js","components/PreviousMovie.js","Home.js","components/Auth.js","components/CustomNavbar.js","pages/Login.js","pages/WatchedMovie.js","pages/UpdateMovie.js","pages/Suggestions.js","components/PrivateRoute.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["months","module","exports","date","Date","getMonth","getDate","getFullYear","SuggestionForm","state","movieSuggestion","movieNote","loggedIn","submitSuggestion","length","movie","axios","method","url","data","trim","withCredentials","then","response","success","setState","window","alert","val","movieIdx","catch","error","console","log","updateMovie","event","target","value","updateUser","user","updateNote","showReviewForm","this","context","onChange","localStorage","getItem","name","defaultValue","disabled","hidden","process","onClick","React","Component","PreviousMovie","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","Home","isMovieSelected","movieOTW","userOTW","noteOTW","description","posterLink","previousMovies","currentPool","upcomingMovies","recentUpdates","isLoading","updateWatchedSort","sortBy","movies","updateFormat","movieOTWData","watchOTW","watchedMovies","note","genre","rating","runtime","imgLoaded","style","display","gridRow","textDecoration","href","height","width","onLoad","src","marginBottom","textAlign","marginTop","map","i","suggestion","up","watched","color","formatDate","marginRight","withRouter","LoginContext","createContext","loggedin","currentUser","UpdateAuthContext","AuthProvider","children","loginStatus","useContext","useState","setLoginStatus","loading","setLoadingStatus","updateAuth","isLoggedIn","useEffect","Provider","CustomNavbar","username","logout","setItem","location","reload","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","to","Button","variant","Login","password","loginUser","e","preventDefault","history","push","message","updatePass","onSubmit","placeholder","type","contextType","WatchedMovie","movieName","selectedMovie","handleChange","submitWatched","filter","selected","Suggestions","enteredPool","currentChoice","userMovies","otherMovies","deleteSuggestion","confirm","setAsNextChoice","previous","new","enterPool","leavePool","align","PrivateRoute","ReactComponent","render","rest","Profile","email","currentPassword","newPassword","confirmNewPassword","updateEmail","updateUsername","updateCurrentPassword","updateNewPassword","updateConfirmNewPassword","submitEmailUpdate","includes","submitUsernameUpdate","submitPasswordUpdate","currPassword","require","config","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eb8f1110.chunk.js","sourcesContent":["const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction formatDate(date) {\n    date = new Date(date);\n    return (months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear())\n}\n\nmodule.exports = formatDate;","import React from 'react';\nimport axios from 'axios';\nimport '../css/SuggestionForm.css';\n\nclass SuggestionForm extends React.Component {\n    state = {\n        movieSuggestion: '', \n        movieNote: '',\n        loggedIn: false\n    };\n\n    componentDidMount() {\n        this.setState({loggedIn: this.context});\n    }\n\n    submitSuggestion = () => {\n        if (this.state.movieSuggestion.length === 0) {\n            window.alert(\"Movie name cannot be empty.\");\n            return;\n        }\n\n        const movie = this.state.movieSuggestion;\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/SuggestMovie\",\n            data: {\n                movie: movie.trim(), \n                movieNote: this.state.movieNote\n            },\n            withCredentials: true\n        })\n        .then((response) => {\n        if (response.data.success) {\n            this.setState({movieSuggestion:'', movieNote:''});\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.movieIdx);\n        } else {\n            // error occured\n            window.alert(response.data.val);\n        }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    updateMovie = (event) => {\n        this.setState({movieSuggestion: event.target.value})\n    } \n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updateNote = (event) => {\n        this.setState({movieNote: event.target.value});\n    }\n\n    showReviewForm = () => {\n        window.alert(\"clicked\");\n    }\n\n    render() {\n        return(\n            <div>\n                <h1> Suggest a Movie </h1>\n\n                <label> Title: </label>\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\n                <br/>\n\n                {localStorage.getItem('loggedIn') == 'true' ? <></> : \n                <>\n                <label> Suggested By: </label>\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\n                </select>\n                <br/>\n                </>\n                 }   \n\n                <label> Teaser Note (optional): </label>\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\n                <br/>\n\n                <button onClick={this.submitSuggestion}> Suggest </button>\n            </div>\n        );\n    }\n}\n\n\nexport default SuggestionForm;","import React from 'react';\nimport '../css/PreviousMovie.css';\n\nclass PreviousMovie extends React.Component {\n    state = {\n        displayReviewForm: false,\n        reviewSubmitted: false,\n        reviewScoreInput: -1.0,\n        finalReviewScore: -1.0,\n        user: ''\n    }\n\n    displayReviewForm = () => {\n        this.setState({displayReviewForm: true});\n    }\n\n    cancelReview = () => {\n        this.setState({displayReviewForm: false})\n    }\n\n    updateReviewScore = (event) => {\n        this.setState({reviewScore: event.target.value});\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n    \n    submitReview = () => {\n        try {\n            var val = parseFloat(this.state.reviewScore);\n            window.alert(val);\n        } catch {\n            window.alert(\"Error\");\n            return;\n        }\n\n        this.setState({reviewSubmitted: true})\n        //this.setState({})\n    }\n\n    render() {\n        return (\n            <div className=\"container\"> \n                <p> Movie title: {this.props.movieTitle} </p>\n                <p> Suggested by: {this.props.addedBy} </p>\n                <p> Watched on: {this.props.dateWatched} </p>\n                <p> Teaser Note: {this.props.teaser} </p>\n                {/*\n                <p> Average Review: {this.props.avgReview} </p>\n                <p> Review Count: {this.props.reviewCount} </p>\n                <button onClick={this.displayReviewForm}> Make Review </button>\n                {this.state.displayReviewForm ? \n                   <div> \n                        <label> Score (1.00-10.00): </label>\n                        <input onChange={this.updateReviewScore} />\n\n                        <label> Reviewed By: </label>\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\n                        <option value=\"\">Felix</option>\n                        <option value=\"\">Hector</option>\n                        <option value=\"\">Jason</option>\n                        <option value=\"\">Jesse</option>\n                        <option value=\"\">Jorge</option>\n                        <option value=\"\">Juan</option>\n                        <option value=\"\">Octavio</option>\n                        </select>\n\n                        <button onClick={this.submitReview}> Submit </button> \n                        <button onClick={this.cancelReview}> Cancel </button>\n\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\n                   </div>\n                   : \n                   null \n                }\n                */\n                }\n            </div>\n        );\n    }\n}\n\nexport default PreviousMovie;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SuggestionForm from './components/SuggestionForm';\nimport PreviousMovie from './components/PreviousMovie';\nimport formatDate from './utils/dateFormatterUtil';\n\n\nclass Home extends React.Component {\n  state = {\n    isMovieSelected: false,\n    movieOTW: '',\n    userOTW: '', \n    date: '',\n    noteOTW: '',\n    description: '',\n    posterLink: '',\n    previousMovies: [],\n    currentPool: [],\n    upcomingMovies: [],\n    recentUpdates: [],\n    isLoading: true,\n    loggedIn: false\n  }\n  \n  componentDidMount () {\n    // retrieve watched movies\n    axios({\n      method: 'get', \n      url: \"https://movieotw.herokuapp.com/HomeData\",\n      withCredentials: true\n    })\n\n    .then((response) => {\n      // get motw data\n      let movieOTWData = response.data.movieOTW;\n      let user = response.data.user;\n\n      // display motw if it's not blank\n      let isMovieSelected = (movieOTWData.watchOTW.length === 0) ? false : true;\n      \n      let movies = response.data.watchedMovies;\n      this.setState({\n        previousMovies: movies, \n        isMovieSelected: isMovieSelected,\n        movieOTW: movieOTWData.watchOTW,\n        userOTW: user, \n        noteOTW: movieOTWData.note, \n        genre: movieOTWData.genre,\n        rating: movieOTWData.rating,\n        posterLink: movieOTWData.posterLink,\n        runtime: movieOTWData.runtime,\n        upcomingMovies: response.data.upcomingMovies, \n        description: movieOTWData.description,\n        currentPool: response.data.currentPool,\n        recentUpdates: response.data.recentUpdates,\n        isLoading: false,\n        imgLoaded: false \n      });\n    })\n    .catch((error) => {\n      window.alert(\"Unable to load home data: \" + error);\n    })\n\n    this.setState({loggedIn: this.context});\n  }\n  \n  updateWatchedSort = (event) => {\n    // gets newly selected filter type\n    let sortBy = event.target.value;\n\n    // sort watched movies array by new filter\n    axios({\n      method: 'post',\n      url: \"https://movieotw.herokuapp.com/SortWatched\",\n      data: {\n          sortBy: sortBy\n      },\n      withCredentials: true\n    }).then((response) => {\n      this.setState({previousMovies: response.data.movies});\n    }).catch((error) => {\n      window.alert(\"Unable to apply filter: \" + error);\n    });\n  }\n\n  updateFormat = () => {\n    window.alert(\"starting\");\n    axios({\n      method:'post',\n      url:'http://localhost:9000/updateFormat',\n      data:{},\n      withCredentials: true\n    })\n  }\n\n\n  render() {\n\n    return (\n      <>\n      <div style={{display: this.state.imgLoaded == true ? 'grid' : 'none'}} className=\"App\">\n        <div style={{gridRow: '1'}}>\n        <h1 className=\"title\">Selected Movie </h1>\n        {this.state.isMovieSelected ? \n            <div className=\"motw-container borders\"> \n              <h1 className=\"title\"> {this.state.movieOTW} </h1>\n              <h4> {this.state.date} </h4>\n              <p> Location: <a style={{textDecoration: 'underline'}}href=\"https://zoom.us/j/97457711739?pwd=Z2x3K3l5OUVTQVJmNDBkRGNqWHdjZz09\">Zoom Theatre</a></p> \n              <p className=\"addedBy\"> Added by {this.state.userOTW} </p>\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\n              <img style={{height: '45%', width: '45%'}} onLoad={() => {this.setState({imgLoaded:true})}}src={this.state.posterLink}></img> \n              <div className=\"description-container\">\n                <p style={{marginBottom: '-.5px'}}> Description: </p>\n                <p> {this.state.description} </p>\n\n                <p> Genre: {this.state.genre} | Runtime: {this.state.runtime} | Rated {this.state.rating}</p>\n\n              </div>\n            </div> \n            : \n            <p style={{textAlign: 'center'}}> No movie selected yet for this week.</p>\n        }\n        </div>\n\n        <br />\n        <div style={{gridRow: '1', textAlign: 'center'}}>\n        <div className=\"center\">\n        <h1 className=\"title\"> Statistics </h1>\n        <p>Total Movies Suggested: {this.state.upcomingMovies.length + this.state.previousMovies.length} </p>\n        <p>Movies Watched: {this.state.previousMovies.length} </p>\n        <p>Upcoming Movies: {this.state.upcomingMovies.length} </p>\n        <p>Current Pool Size: {this.state.currentPool.length} </p>\n        <p>Members: 7 </p>\n        <SuggestionForm />\n        <h1 style={{marginTop: '15px'}}> Current Pool </h1>\n        {this.state.currentPool.map((user, i) => (\n          <p key={i}> {user.suggestion} - {user.name} </p>\n        ))}\n\n        <h1 style={{marginTop: '15px'}}> Recent Updates </h1>\n        {this.state.recentUpdates.map((up, i) => {\n          return up.watched == true ? <p> <a style={{color: '#90EE90'}}> Movie Watched: </a> <a style={{color:'#FF7F50'}}> {up.name} </a> was watched on {formatDate(up.date)}</p> : <p key={i}> <a style={{color: 'Salmon'}}> Movie Added: </a> <a style={{color: '#87CEFA'}}> {up.addedBy} </a>recommended <a style={{color:'#FF7F50'}}> {up.name} </a> on {formatDate(up.date)}</p>\n        })}\n\n        {/*<a href='/updates'> View All >>> </a> */}\n        </div>\n        </div>\n\n        <div style={{gridRow: '2', textAlign:'center'}}>\n        <h1> Upcoming Movies </h1>\n        {this.state.upcomingMovies.map((movie, i) => (\n          <div>\n            <p key={i}> {movie.name} - {movie.addedBy} </p> \n          </div>\n        ))}\n        </div>\n        \n        <div style={{gridRow: '2', textAlign: 'center'}}>\n        <h1> Movies Watched so Far </h1>\n        <label style={{marginRight: '.5vw'}}> Sort by </label>\n        <select name=\"Name\" defaultValue=\"Date-Descending\" onChange={this.updateWatchedSort}>\n        <option value={\"recent\"}>Recent First</option>\n        <option value={\"oldest\"}>Oldest First</option>\n        <option value={\"name\"}>Movie Name</option>\n        <option disabled={true} value={\"o-rating\"}>Overall Ratings</option>\n        <option disabled={true} value={\"u-rating\"}>My Ratings</option>\n        </select>\n        {this.state.previousMovies.map((movie, i) => (\n          <PreviousMovie className=\"watched-container\" key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={formatDate(movie.date)} />\n        ))}\n        </div>\n        <br />\n        <button onClick={this.updateFormat}> Update </button>\n        </div>\n      </>\n    );\n  }\n}\n\n\nexport default withRouter(Home);\n","import  React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\nconst LoginContext      = React.createContext({loggedin: false, currentUser: {}});\nconst UpdateAuthContext = React.createContext(true);\n\nconst AuthProvider = ({children}) => {\n    const loginStatus = useContext(LoginContext);\n    const [loggedIn, setLoginStatus]  = useState(loginStatus);\n    const [loading, setLoadingStatus] = useState(true);\n\n    let updateAuth = function () {\n        return axios({\n            method: 'get', \n            url: \"https://movieotw.herokuapp.com/loginCheck\",\n            withCredentials: true\n          })\n        .then((response) => {\n            if (response.data.isLoggedIn) {\n                setLoginStatus({loggedIn: true, currentUser: response.data.currentUser});\n            } else {\n                setLoginStatus({loggedIn: false, currentUser: {}});\n            }\n            setLoadingStatus(false);\n        })\n        .catch((error) => {\n            window.alert(\"Unable to load home data: \" + error);\n            setLoginStatus({loggedIn: false, currentUser: {}});\n            setLoadingStatus(false);\n        })\n    }\n\n    useEffect(() => {\n        updateAuth();\n    }, [])\n\n    if (loading) {\n        return (\n            // render nothing if auth check hasn't finished yet\n            <> </>\n        );\n    }\n\n    return (\n        <UpdateAuthContext.Provider value={updateAuth}>\n            <LoginContext.Provider value={loggedIn}>\n                {children}\n            </LoginContext.Provider>\n        </UpdateAuthContext.Provider>\n    );\n}\n\nexport {UpdateAuthContext, AuthProvider, LoginContext}","import React, { createContext } from 'react';\nimport { withRouter } from 'react-router';\nimport { Navbar, NavDropdown, Nav, Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { LoginContext } from '../components/Auth';\n\nclass CustomNavbar extends React.Component {\n    state = {\n        loggedIn: this.props.user.loggedIn,\n        currentUser: this.props.user.currentUser === null ? \"\" : this.props.user.currentUser.username\n    }\n\n    logout = () => {\n        axios({\n            method: 'get',\n            url: 'https://movieotw.herokuapp.com/logout',\n            withCredentials: true,\n            loggedIn: this.context.loggedIn\n        }).then((response) => {\n            if (!response.data.success) {\n                window.alert(\"Unable to logout, please try again.\");\n                return;\n            }\n\n            this.setState({loggedIn: false});\n            localStorage.setItem('loggedIn', false);\n            window.location.reload();\n        }).catch((error) => {\n            window.alert(\"Unable to logout: \" + error);\n        });\n    }\n\n    componentDidMount() {\n        this.setState({loggedIn: this.props.user.loggedIn});\n        this.setState({currentUser: this.props.user.currentUser.username})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\">\n                <Navbar.Brand style={{color: 'salmon'}}href=\"/\">Movie Of The Week</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"#home\">Leaderboard</Nav.Link>\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"#suggestions\">Suggestions</Nav.Link>\n                    <Nav.Link style={{color: 'white', textDecoration: 'underline'}} href=\"/addWatched\">Add to Watched List</Nav.Link>\n\n                    </Nav>\n                    <Form inline>\n                    \n                    {!this.state.loggedIn ? \n                        <>\n                        <LinkContainer to=\"/login\">\n                            <Button color=\"green\" variant=\"secondary\">\n                               Login \n                            </Button>\n                        </LinkContainer>\n                        </>\n                        :\n                        <>\n\n                        {this.state.currentUser === \"\" ?  <p></p> : <p style={{marginRight: '10px', marginTop: '12px'}}> Welcome back, {this.state.currentUser}!</p>}\n                        <LinkContainer style={{marginRight: '5px'}} to=\"/profile\">\n                            <Button color=\"blue\" variant=\"secondary\">\n                              Profile \n                            </Button>\n                        </LinkContainer>\n                        <Button onClick={this.logout} color=\"blue\" variant=\"secondary\">\n                            Logout    \n                        </Button>\n                        </>\n                    }\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default withRouter(CustomNavbar);","import React, { useContext } from 'react';\nimport { AuthProvider, UpdateAuthContext } from '../components/Auth';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\nimport '../css/Login.css';\nimport { withRouter } from 'react-router';\n\nclass Login extends React.Component {\n    state = {\n        user: '',\n        password: '',\n    }\n\n    loginUser = (e) => {\n        e.preventDefault();\n        // both fields empty check\n        if (this.state.user.length == 0 && this.state.password.length == 0) {\n            window.alert(\"Both fields cannot be empty.\");\n            return;\n        }\n\n        // empty username check\n        if (this.state.user.length == 0) {\n            window.alert(\"Email/Username field cannot be empty.\");\n            return; \n        }\n\n        // empty password check\n        if (this.state.password.length == 0) {\n            window.alert(\"Password field cannot be empty.\");\n            return;\n        }\n\n        // attempt to sign in user\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/login\",\n            data: {\n                username: this.state.user,\n                password: this.state.password\n            },\n            withCredentials: true\n          }).then((response) => {\n              // login failed\n              if (!response.data.success) {\n                window.alert(response.data.message);\n                return;\n              }\n\n              localStorage.setItem('loggedIn', true); \n              let updateAuth = this.context;\n              updateAuth().then(() => {\n                this.props.history.push('/');\n                window.location.reload();\n              });\n\n          }).catch((error) => {\n            window.alert(\"Error signing in: \" + error);\n          });\n    }\n\n    updateUser = (event) => {\n        this.setState({user: event.target.value});\n    }\n\n    updatePass = (event) => {\n        this.setState({password: event.target.value});\n    }\n\n\n\n    render() {\n        return (\n            <>\n                <div className=\"login-container\">\n                    <h1 className=\"title\"> Login </h1>\n                    <form onSubmit={this.loginUser}>\n                        <input placeholder=\"Username or Email\" onChange={this.updateUser} />\n                        <br/>\n\n                        <input type=\"password\" placeholder=\"Password\" onChange={this.updatePass} />\n                        <br/>\n                        <br/>\n                        <button type=\"submit\"> Login </button>            \n                    </form>\n                    <br/>\n\n                </div>\n\n            </>\n        );\n    }\n}\n\nLogin.contextType = UpdateAuthContext;\n\nexport default withRouter(Login);","import React from 'react';\nimport CustomNavbar from '../components/CustomNavbar';\nimport axios from 'axios';\n\nclass WatchedMovie extends React.Component {\n    state = {\n        movieName: '',\n        movies: [],\n        selectedMovie: 'Choose Movie',\n        loading: true\n    }\n\n    componentDidMount() {\n        axios({\n            method: 'get',\n            url: \"https://movieotw.herokuapp.com/movie/getMovies\",\n            withCredentials: true\n        }).then((response) => {\n            if (response.data.success) \n                this.setState({movies: response.data.movies});\n\n        }).catch((error) => {window.alert(error)});\n\n        this.setState({loading: false});\n    }\n\n    handleChange = (event) => {\n        this.setState({selectedMovie: event.target.value});\n    }\n\n    submitWatched = () => {\n        console.log(\"submitting\");\n        if (this.state.selectedMovie === 'Choose Movie') {\n            window.alert(\"Invalid movie.\");\n            return;\n        }\n            \n        axios({\n            method: 'post', \n            url: 'https://movieotw.herokuapp.com/movie/watchedMovie',\n            data: {\n                movie: this.state.selectedMovie\n            },\n            withCredentials: true\n        }).then((response) => {\n            if (response.data.success) {\n                window.alert(\"Added \" + this.state.selectedMovie + \" to watched list.\");\n                this.setState({movies: this.state.movies.filter(movie => movie.name.trim() !== this.state.selectedMovie)});\n                this.setState({selectedMovie: 'Choose Movie'});\n            } else {\n                window.alert(response.data.val);\n            }\n\n        }).catch((error) => {window.alert(error)});\n\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <></>;\n        }\n\n        return (\n            <>\n            <h1> Movie Name </h1>\n            <select value={this.state.selectedMovie} onChange={this.handleChange}> \n                <option selected disabled> Choose Movie </option>\n                {this.state.movies.map((movie) => (\n                    <option> {movie.name} </option>\n                ))}\n            </select>\n            <button onClick={this.submitWatched}> Submit </button>\n\n            <br/>\n\n \n           \n            </>\n        );\n    }\n}\n\nexport default WatchedMovie;","import React from 'react';\nimport CustomNavbar from '../components/CustomNavbar';\nimport axios from 'axios';\n\nclass UpdateMovie extends React.Component {\n    state = {\n        movieName: '',\n        addedBy: '',\n        teaser: '',\n        description: '',\n        rating: '',\n        runtime: '',\n        genre: '',\n        posterLink: ''\n    }\n\n    updateMovieName = (event) => {\n        this.setState({movieName: event.target.value});\n    }\n\n    updateAddedBy = (event) => {\n        this.setState({addedBy: event.target.value});\n    }\n\n    updateTeaser = (event) => {\n        this.setState({teaser: event.target.value});\n    }\n\n    updateDescription = (event) => {\n        this.setState({description: event.target.value});\n    }\n\n    updateRating = (event) => {\n        this.setState({rating: event.target.value});\n    }\n\n    updateRuntime = (event) => {\n        this.setState({runtime: event.target.value});\n    }\n\n    updateGenre = (event) => {\n        this.setState({genre: event.target.value});\n    }\n\n    updatePosterLink = (event) => {\n        this.setState({posterLink: event.target.value});\n    }\n\n    submitUpdateMovie = () => {\n        axios({\n            method: 'post',\n            url: \"https://movieotw.herokuapp.com/movie/updateMovie\",\n            data: {\n                movieName: this.state.movieName,\n                addedBy: this.state.addedBy,\n                teaser: this.state.teaser,\n                description: this.state.description,\n                rating: this.state.rating,\n                runtime: this.state.runtime,\n                genre: this.state.genre,\n                posterLink: this.state.posterLink\n            },\n            withCredentials: true\n          }).then((response) => {\n            if (response.data.success) {\n                window.alert(\"Movie of the week updated.\")\n            } else {\n                window.alert(\"Unable to update movie of the week.\")\n            }\n          }).catch((error) => {\n            window.alert(\"Error updating movie: \" + error);\n          });\n    }\n\n    render() {\n        return (\n            <>\n            <h1> Movie Name </h1>\n            <input value={this.state.movieName} onChange={this.updateMovieName} /> \n            <br/>\n\n            <h1> Added By </h1>\n            <p> Enter username of person who added movie. Username is their firstname if they haven't changed it yet. </p>\n            <input value={this.state.addedBy} onChange={this.updateAddedBy} /> \n            <br/>\n\n            <h1> Teaser </h1>\n            <input value={this.state.teaser} onChange={this.updateTeaser} /> \n            <br/>\n\n            <h1> Description </h1>\n            <p> Just copy/paste giant paragraph into here. </p>\n            <input value={this.state.description} onChange={this.updateDescription} /> \n            <br/>\n\n            <h1> Rating </h1>\n            <input value={this.state.rating} onChange={this.updateRating} /> \n            <br/>\n\n            <h1> Runtime </h1>\n            <p> Usually put it in \"x hr x min\" format </p>\n            <input value={this.state.runtime} onChange={this.updateRuntime} /> \n            <br/>\n\n            <h1> Genre </h1>\n            <input value={this.state.genre} onChange={this.updateGenre} /> \n            <br/>\n\n            <h1> Poster Link</h1>\n            <p> I always get poster links from <a href=\"https://www.omdbapi.com/\"> here. </a></p>\n            <p> Search for the movie in \"Examples\" section by title or imdb id. </p>\n            <input value={this.state.posterLink} onChange={this.updatePosterLink} /> \n            <br/>\n            <br/>\n            <button onClick={this.submitUpdateMovie}>Update Movie</button>\n            </>\n        );\n    }\n}\n\nexport default UpdateMovie;","import React from 'react';\nimport axios from 'axios';\nimport formatDate from '../utils/dateFormatterUtil';\nimport '../css/Suggestions.css';\n\nclass Suggestions extends React.Component {\n   state = {\n    enteredPool: false,\n    currentChoice: {},\n    isLoading: true, \n    userMovies: [],\n    otherMovies: []\n   }\n\n   componentDidMount() {\n    axios({\n        method: 'get', \n        url: \"https://movieotw.herokuapp.com/loadSuggestions\",\n        withCredentials: true\n      })\n  \n      .then((response) => {\n        // user not signed in\n        this.setState({enteredPool: response.data.enteredPool, userMovies: response.data.userMovies, otherMovies: response.data.otherMovies, currentChoice: response.data.currentChoice, isLoading: false});\n  \n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })     \n   } \n\n   deleteSuggestion = (movieName) => {\n     if (window.confirm(\"Remove \" + movieName + \"?\")) {\n        // remove movie from database\n        axios({\n          method: 'post', \n          url: \"https://movieotw.herokuapp.com/movie/removeSuggestion\",\n          data: {\n            movie: movieName\n          },\n          withCredentials: true\n        })\n    \n        .then((response) => {\n          if (response.data.success) {\n            this.setState({userMovies: this.state.userMovies.filter((movie) => { return movie.name !== movieName})});\n            window.alert(\"Successfully removed \" + movieName + \".\");\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })     \n     }\n   }\n\n   setAsNextChoice = (movie) => {\n     if (movie.name === this.state.currentChoice.name && this.state.enteredPool) window.alert(\"Movie already set as current choice.\");\n     else if (window.confirm(\"Update current suggestion to \" + movie.name + \"?\")) {\n        this.setState({enteredPool: true});\n        if (movie.name == this.state.currentChoice) {\n          window.alert('hit');\n          return;\n        }\n\n        // update user's current suggestion\n        axios({\n          method: 'post', \n          url: \"https://movieotw.herokuapp.com/movie/updateSuggestion\",\n          data: {\n            previous: this.state.currentChoice.name,\n            new: movie.name\n          },\n          withCredentials: true\n        })\n\n        .then((response) => {\n          if (response.data.success) {\n            this.setState({currentChoice: movie});\n          } else {\n            window.alert(response.data.val);\n          }\n        })\n        .catch((error) => {\n          window.alert(\"Unable to suggestions: \" + error);\n        })   \n     }\n   }\n   \n   enterPool = () => {\n    // enter user in pool\n    axios({\n      method: 'post', \n      url: \"https://movieotw.herokuapp.com/user/enterPool\",\n      withCredentials: true\n    })\n\n    .then((response) => {\n      if (response.data.success) {\n        this.setState({enteredPool: true});\n      } else {\n        window.alert(response.data.val);\n      }\n    })\n    .catch((error) => {\n      window.alert(\"Unable to suggestions: \" + error);\n    })   \n  }\n\n   leavePool = () => {\n     if (window.confirm(\"Leave current pool?\")) {\n      // enter user in pool\n      axios({\n        method: 'post', \n        url: \"https://movieotw.herokuapp.com/user/leavePool\",\n        withCredentials: true\n      })\n\n      .then((response) => {\n        if (response.data.success) {\n          this.setState({enteredPool: false});\n        } else {\n          window.alert(response.data.val);\n        }\n      })\n      .catch((error) => {\n        window.alert(\"Unable to suggestions: \" + error);\n      })   \n     }\n   }\n\n   render() {\n     if (this.state.isLoading) {\n       return <></>\n     }\n\n    return (\n        <>  \n        <h1 className=\"suggestion-title\"> Current Choice </h1>\n        {this.state.enteredPool == false ? \n          <div style={{textAlign: 'center'}}>\n            <p> Suggest a movie below to join the pool! </p>\n            <button style={{align: 'center'}} onClick={this.enterPool}> Choose Randomly </button> \n          </div>\n          :\n          <>\n          <div style={{textAlign: 'center'}}>\n            <p> Override this choice by suggesting a different movie. </p>\n          </div>\n          <div className=\"suggestion-container\"> \n            <p> {this.state.currentChoice.name}</p>\n            <p> Date added {formatDate(this.state.currentChoice.date)} </p>\n            <p> Added by {this.state.currentChoice.addedBy} </p>\n            <button onClick={() => {this.deleteSuggestion(this.state.currentChoice.name)}}> Delete </button>\n            <button onClick={this.leavePool}> Leave Pool </button>\n          </div>\n          </>\n        }\n\n        <h1 className=\"suggestion-title\"> My Unwatched Suggestions </h1>\n        {this.state.userMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Added on {formatDate(movie.date)} </p>\n                <button onClick={() => {this.deleteSuggestion(movie.name)}}> Delete </button>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest </button>\n            </div>\n        ))}\n\n        <h1 className=\"suggestion-title\"> What Everyone Else Wants to Watch </h1>\n        {this.state.otherMovies.map((movie, i) => (\n            <div key={i} className=\"suggestion-container\">\n                <p> {movie.name} </p>\n                <p> Date added {formatDate(movie.date)} </p>\n                <p> Added by {movie.addedBy} </p>\n                <button onClick={() => {this.setAsNextChoice(movie)}}> Suggest </button>\n            </div>\n        ))}\n        </>\n    );\n   }\n}\n\nexport default Suggestions;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { LoginContext } from './Auth';\n\nconst PrivateRoute = ({render: ReactComponent, ...rest}) => {\n    const isLoggedIn = useContext(LoginContext).loggedIn;\n    return (\n        <Route {...rest} render={props => (isLoggedIn ? <ReactComponent {...props} /> : <Redirect to='/login'/>)} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport axios from 'axios';\nimport CustomNavbar from '../components/CustomNavbar';\n\nclass Profile extends React.Component {\n   state = {\n      email: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      username: ''\n   }\n\n   updateEmail = (event) => {\n      this.setState({email: event.target.value});\n   }\n\n   updateUsername = (event) => {\n      this.setState({username: event.target.value});\n   }\n\n   updateCurrentPassword = (event) => {\n      this.setState({currentPassword: event.target.value});\n   }\n\n   updateNewPassword = (event) => {\n      this.setState({newPassword: event.target.value});\n   }\n\n   updateConfirmNewPassword = (event) => {\n      this.setState({confirmNewPassword: event.target.value});\n   }\n\n   submitEmailUpdate = () => {\n      if (this.state.email.length === 0) {\n         window.alert('Email field empty.');\n         return;\n      }\n\n      if (!this.state.email.includes('@')) {\n         window.alert('Domain (@) not specified.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateEmail',\n         data: {\n             email: this.state.email\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Email has successfully updated.');\n            this.setState({email:''});\n          } else {\n            window.alert(\"Email did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update email: \" + error);\n       });\n   }\n\n   submitUsernameUpdate = () => {\n      if (this.state.username.length === 0) {\n         window.alert('Username field empty.');\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updateUsername',\n         data: {\n             username: this.state.username\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Username has successfully updated.');\n            this.setState({username:''});\n          } else {\n            window.alert(\"Username did not update, please try again.\");\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update username: \" + error);\n       })\n\n   }\n\n   submitPasswordUpdate = () => {\n      if (this.state.currentPassword.length === 0) {\n         window.alert(\"Current password field is empty.\");\n         return;\n      }\n\n      if (this.state.newPassword.length === 0) {\n         window.alert(\"New password field is empty.\");\n         return;\n      }\n\n      if (this.state.confirmNewPassword !== this.state.newPassword) {\n         window.alert(\"New passwords did not match. Please try again.\");\n         return;\n      }\n\n      axios({\n         method: 'post',\n         url: 'https://movieotw.herokuapp.com/user/updatePassword',\n         data: {\n             newPassword: this.state.newPassword,\n             currPassword: this.state.currentPassword\n         },\n         withCredentials: true\n       }).then((response) => {\n          if (response.data.success) {\n            window.alert('Password has successfully updated.');\n            this.setState({currentPassword:''});\n            this.setState({newPassword:''});\n            this.setState({confirmNewPassword:''});\n          } else {\n            window.alert(\"Password did not update: \" + response.data.val);\n          }\n       }).catch((error) => {\n         window.alert(\"Unable to update password: \" + error);\n       })\n   }\n\n   render() {\n     return (\n        <>\n        <h1> Update Email </h1>\n        <input value={this.state.email} onChange={this.updateEmail} /> \n        <br/>\n        <button onClick={this.submitEmailUpdate}>Update Email </button>\n        <h1> Update Username </h1>\n        <input value={this.state.username} onChange={this.updateUsername} /> \n        <br/>\n        <button onClick={this.submitUsernameUpdate}>Update Username</button>\n        <h1> Update Password </h1>\n        <label> Current password </label>\n        <input value={this.state.currentPassword} type=\"password\" onChange={this.updateCurrentPassword} /> \n        <br/>\n        <label> New Password </label> \n        <input value={this.state.newPassword} type=\"password\" onChange={this.updateNewPassword} /> \n        <br/>\n        <label> Confirm New Password </label> \n        <input value={this.state.confirmNewPassword} type=\"password\" onChange={this.updateConfirmNewPassword} /> \n        <br/>\n        <button onClick={this.submitPasswordUpdate}>Update Password </button>\n        </>\n     );\n   } \n}\n\nexport default Profile;","import React, { useContext } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Login from './pages/Login';\nimport UpdateMovie from './pages/UpdateMovie';\nimport WatchedMovie from './pages/WatchedMovie';\nimport Suggestions from './pages/Suggestions';\nimport PrivateRoute from './components/PrivateRoute';\nimport { LoginContext } from './components/Auth';\nimport Profile from './pages/Profile';\nimport CustomNavbar from './components/CustomNavbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nrequire('dotenv').config()\n\n/*\nclass App extends React.Component {\n  componentDidMount () {\n    console.log(this.context);\n  }\n\n  render() {\n    return(\n          <>\n          <AuthProvider>\n          <CustomNavbar />\n            <Router>\n              <PrivateRoute path=\"/\"            exact render={(props) => <Home />} />\n              <Route path=\"/login\"              exact render={(props) => <Login />} />\n              <PrivateRoute path=\"/suggestions\" exact render={(props) => <Suggestions />} />\n              <PrivateRoute path=\"/profile\"     exact render={(props) => <Profile />} />\n              <PrivateRoute path=\"/updateMovie\" exact render={(props) => <UpdateMovie />} />\n            </Router>\n          </AuthProvider>\n          </>\n    );\n  }\n}\n*/\n\nconst App = ({children}) => {\n  let loginStatus = useContext(LoginContext);\n  return (\n    <>\n     <Router>\n        <CustomNavbar user={loginStatus} />\n        <PrivateRoute path=\"/\"            exact render={(props) => <Home />} />\n        <Route        path=\"/login\"              exact render={(props) => <Login />} />\n        <PrivateRoute path=\"/suggestions\" exact render={(props) => <Suggestions />} />\n        <PrivateRoute path=\"/profile\"     exact render={(props) => <Profile />} />\n        <PrivateRoute path=\"/addWatched\" exact render={(props) => <WatchedMovie />} />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './components/Auth';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <AuthProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}